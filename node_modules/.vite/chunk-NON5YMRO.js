import {
  CheckedMixin,
  SlotTargetController
} from "./chunk-RARRYMG4.js";
import {
  InputController
} from "./chunk-NENT67AA.js";
import {
  LabelledInputController
} from "./chunk-YESAUM4I.js";
import {
  LabelMixin
} from "./chunk-2PREY5TQ.js";
import {
  DelegateFocusMixin
} from "./chunk-W2FE6W4J.js";
import {
  ControllerMixin
} from "./chunk-BUARF445.js";
import {
  ActiveMixin
} from "./chunk-THDKHJJJ.js";
import {
  ThemableMixin
} from "./chunk-PALO6AVQ.js";
import {
  ElementMixin
} from "./chunk-ZAXSWEEW.js";
import {
  PolymerElement,
  html
} from "./chunk-EMDRMWGL.js";

// node_modules/@vaadin/checkbox/src/vaadin-checkbox.js
var Checkbox = class extends LabelMixin(CheckedMixin(DelegateFocusMixin(ActiveMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))))))) {
  static get is() {
    return "vaadin-checkbox";
  }
  static get template() {
    return html`
      <style>
        :host {
          display: inline-block;
        }

        :host([hidden]) {
          display: none !important;
        }

        :host([disabled]) {
          -webkit-tap-highlight-color: transparent;
        }

        .vaadin-checkbox-container {
          display: grid;
          grid-template-columns: auto 1fr;
          align-items: baseline;
        }

        .vaadin-checkbox-wrapper {
          position: relative;
          height: 100%;
        }

        /* visually hidden */
        ::slotted(input) {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          width: 100%;
          height: 100%;
          opacity: 0;
          cursor: inherit;
          margin: 0;
        }
      </style>
      <div class="vaadin-checkbox-container">
        <div class="vaadin-checkbox-wrapper">
          <div part="checkbox"></div>
          <slot name="input"></slot>
        </div>

        <slot name="label"></slot>

        <div style="display: none !important">
          <slot id="noop"></slot>
        </div>
      </div>
    `;
  }
  static get properties() {
    return {
      indeterminate: {
        type: Boolean,
        notify: true,
        value: false,
        reflectToAttribute: true
      },
      name: {
        type: String,
        value: ""
      }
    };
  }
  static get delegateProps() {
    return [...super.delegateProps, "indeterminate"];
  }
  static get delegateAttrs() {
    return [...super.delegateAttrs, "name"];
  }
  constructor() {
    super();
    this._setType("checkbox");
    this.value = "on";
  }
  connectedCallback() {
    super.connectedCallback();
    if (!this._inputController) {
      this._inputController = new InputController(this, (input) => {
        this._setInputElement(input);
        this._setFocusElement(input);
        this.stateTarget = input;
        this.ariaTarget = input;
      });
      this.addController(this._inputController);
      this.addController(new LabelledInputController(this.inputElement, this._labelController));
      this.addController(new SlotTargetController(this.$.noop, () => this._labelController.node, () => this.__warnDeprecated()));
    }
  }
  __warnDeprecated() {
    console.warn(`WARNING: Since Vaadin 22, placing the label as a direct child of a <vaadin-checkbox> is deprecated.
Please use <label slot="label"> wrapper or the label property instead.`);
  }
  _shouldSetActive(event) {
    if (event.target.localName === "a") {
      return false;
    }
    return super._shouldSetActive(event);
  }
  _toggleChecked(checked) {
    if (this.indeterminate) {
      this.indeterminate = false;
    }
    super._toggleChecked(checked);
  }
};
customElements.define(Checkbox.is, Checkbox);

export {
  Checkbox
};
/**
 * @license
 * Copyright (c) 2017 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-NON5YMRO.js.map
