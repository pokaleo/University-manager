import {
  DelegateFocusMixin
} from "./chunk-W2FE6W4J.js";
import {
  KeyboardMixin
} from "./chunk-CHZ6BFNC.js";
import {
  ThemableMixin
} from "./chunk-PALO6AVQ.js";
import {
  ElementMixin
} from "./chunk-ZAXSWEEW.js";
import {
  PolymerElement,
  html
} from "./chunk-EMDRMWGL.js";

// node_modules/@vaadin/field-base/src/shadow-focus-mixin.js
var ShadowFocusMixin = (superClass) => class ShadowFocusMixinClass extends DelegateFocusMixin(KeyboardMixin(superClass)) {
  static get properties() {
    return {
      tabindex: {
        type: Number,
        value: 0
      }
    };
  }
  _onKeyDown(event) {
    super._onKeyDown(event);
    if (!event.defaultPrevented && event.keyCode === 9 && event.shiftKey) {
      this._isShiftTabbing = true;
      HTMLElement.prototype.focus.apply(this);
      this._setFocused(false);
      setTimeout(() => this._isShiftTabbing = false, 0);
    }
  }
  _shouldSetFocus(event) {
    if (!this.disabled && this.focusElement) {
      const path = event.composedPath();
      if (path[0] === this && !this.contains(event.relatedTarget) && !this._isShiftTabbing) {
        this.focusElement.focus();
        return true;
      }
      if (path.includes(this.focusElement)) {
        return true;
      }
    }
    return false;
  }
  _tabindexChanged(tabindex) {
    if (tabindex !== void 0) {
      this.focusElement.tabIndex = tabindex;
    }
    if (this.disabled && tabindex) {
      if (tabindex !== -1) {
        this.__lastTabIndex = tabindex;
      }
      this.tabindex = void 0;
    }
  }
};

// node_modules/@vaadin/details/src/vaadin-details.js
var Details = class extends ShadowFocusMixin(ElementMixin(ThemableMixin(PolymerElement))) {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none !important;
        }

        [part='content'] {
          display: none;
          overflow: hidden;
        }

        [part='summary'][disabled] {
          pointer-events: none;
        }

        :host([opened]) [part='content'] {
          display: block;
          overflow: visible;
        }
      </style>
      <div role="heading">
        <div
          role="button"
          part="summary"
          on-click="_onToggleClick"
          on-keydown="_onToggleKeyDown"
          disabled$="[[disabled]]"
          aria-expanded$="[[_getAriaExpanded(opened)]]"
          aria-controls$="[[_contentId]]"
        >
          <span part="toggle" aria-hidden="true"></span>
          <span part="summary-content"><slot name="summary"></slot></span>
        </div>
      </div>
      <section id$="[[_contentId]]" part="content" aria-hidden$="[[_getAriaHidden(opened)]]">
        <slot></slot>
      </section>
    `;
  }
  static get is() {
    return "vaadin-details";
  }
  static get properties() {
    return {
      opened: {
        type: Boolean,
        value: false,
        reflectToAttribute: true,
        notify: true,
        observer: "_openedChanged"
      }
    };
  }
  get _collapsible() {
    return this.shadowRoot.querySelector('[part="content"]');
  }
  get focusElement() {
    return this.shadowRoot.querySelector('[part="summary"]');
  }
  ready() {
    super.ready();
    const uniqueId = Details._uniqueId = 1 + Details._uniqueId || 0;
    this._contentId = `${this.constructor.is}-content-${uniqueId}`;
    this._collapsible.addEventListener("keydown", (e) => {
      if (e.shiftKey && e.keyCode === 9) {
        e.stopPropagation();
      }
    });
  }
  _getAriaExpanded(opened) {
    return opened ? "true" : "false";
  }
  _getAriaHidden(opened) {
    return opened ? "false" : "true";
  }
  _openedChanged(opened) {
    this._collapsible.style.maxHeight = opened ? "" : "0px";
  }
  _onToggleClick() {
    this.opened = !this.opened;
  }
  _onToggleKeyDown(e) {
    if ([13, 32].indexOf(e.keyCode) > -1) {
      e.preventDefault();
      this.opened = !this.opened;
    }
  }
};
customElements.define(Details.is, Details);

export {
  Details
};
/**
 * @license
 * Copyright (c) 2019 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-4EIMSLGI.js.map
