{
  "version": 3,
  "sources": ["../@vaadin/component-base/src/keyboard-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin that manages keyboard handling.\n * The mixin subscribes to the keyboard events while an actual implementation\n * for the event handlers is left to the client (a component or another mixin).\n *\n * @polymerMixin\n */\nexport const KeyboardMixin = dedupingMixin(\n  (superclass) =>\n    class KeyboardMixinClass extends superclass {\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this.addEventListener('keydown', (event) => {\n          this._onKeyDown(event);\n        });\n\n        this.addEventListener('keyup', (event) => {\n          this._onKeyUp(event);\n        });\n      }\n\n      /**\n       * A handler for the `keydown` event. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} _event\n       * @protected\n       */\n      _onKeyDown(_event) {\n        // To be implemented.\n      }\n\n      /**\n       * A handler for the `keyup` event. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @param {KeyboardEvent} _event\n       * @protected\n       */\n      _onKeyUp(_event) {\n        // To be implemented.\n      }\n    }\n);\n"],
  "mappings": ";;;;;AAAA,AAcO,IAAM,gBAAgB,cAC3B,CAAC,eACC,MAAM,2BAA2B,WAAW;AAAA,EAE1C,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,iBAAiB,WAAW,CAAC,UAAU;AAC1C,WAAK,WAAW,KAAK;AAAA,IACvB,CAAC;AAED,SAAK,iBAAiB,SAAS,CAAC,UAAU;AACxC,WAAK,SAAS,KAAK;AAAA,IACrB,CAAC;AAAA,EACH;AAAA,EASA,WAAW,QAAQ;AAAA,EAEnB;AAAA,EASA,SAAS,QAAQ;AAAA,EAEjB;AACF,CACJ;",
  "names": []
}
