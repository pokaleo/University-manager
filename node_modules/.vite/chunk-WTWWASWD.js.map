{
  "version": 3,
  "sources": ["../@vaadin/number-field/theme/lumo/vaadin-number-field-styles.js", "../@vaadin/number-field/src/vaadin-number-field.js", "../@vaadin/number-field/theme/lumo/vaadin-number-field.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport { fieldButton } from '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst numberField = css`\n  :host {\n    width: 8em;\n  }\n\n  :host([has-controls]:not([theme~='align-right'])) ::slotted(input) {\n    text-align: center;\n  }\n\n  [part$='button'][disabled] {\n    opacity: 0.2;\n  }\n\n  :host([has-controls]) [part='input-field'] {\n    padding: 0;\n  }\n\n  [part\\$='button'] {\n    cursor: pointer;\n    font-size: var(--lumo-icon-size-s);\n    width: 1.6em;\n    height: 1.6em;\n  }\n\n  [part\\$='button']::before {\n    margin-top: 0.3em;\n  }\n\n  [part='decrease-button']::before {\n    content: var(--lumo-icons-minus);\n  }\n\n  [part='increase-button']::before {\n    content: var(--lumo-icons-plus);\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']:not([theme~='align-right'])) ::slotted(input) {\n    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n  }\n`;\n\nregisterStyles('vaadin-number-field', [inputFieldShared, fieldButton, numberField], {\n  moduleId: 'lumo-number-field'\n});\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { SlotStylesMixin } from '@vaadin/field-base/src/slot-styles-mixin.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-number-field', inputFieldShared, { moduleId: 'vaadin-number-field-styles' });\n\n/**\n * `<vaadin-number-field>` is an input field web component that only accepts numeric input.\n *\n * ```html\n * <vaadin-number-field label=\"Balance\"></vaadin-number-field>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-number-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name         | Description\n * ------------------|-------------------------\n * `increase-button` | Increase (\"plus\") button\n * `decrease-button` | Decrease (\"minus\") button\n *\n * Note, the `input-prevented` state attribute is not supported by `<vaadin-number-field>`.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes InputFieldMixin\n * @mixes SlotStylesMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nexport class NumberField extends InputFieldMixin(SlotStylesMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([readonly]) [part$='button'] {\n          pointer-events: none;\n        }\n\n        [part='decrease-button']::before {\n          content: '\u2212';\n        }\n\n        [part='increase-button']::before {\n          content: '+';\n        }\n\n        [part='decrease-button'],\n        [part='increase-button'] {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n        }\n\n        :host([dir='rtl']) [part='input-field'] {\n          direction: ltr;\n        }\n      </style>\n\n      <div class=\"vaadin-field-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[theme]]\"\n        >\n          <div\n            disabled$=\"[[!_allowed(-1, value, min, max, step)]]\"\n            part=\"decrease-button\"\n            on-click=\"_decreaseValue\"\n            on-touchend=\"_decreaseButtonTouchend\"\n            hidden$=\"[[!hasControls]]\"\n            aria-hidden=\"true\"\n            slot=\"prefix\"\n          ></div>\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <slot name=\"suffix\" slot=\"suffix\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div\n            disabled$=\"[[!_allowed(1, value, min, max, step)]]\"\n            part=\"increase-button\"\n            on-click=\"_increaseValue\"\n            on-touchend=\"_increaseButtonTouchend\"\n            hidden$=\"[[!hasControls]]\"\n            aria-hidden=\"true\"\n            slot=\"suffix\"\n          ></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display value increase/decrease controls.\n       * @attr {boolean} has-controls\n       */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The minimum value of the field.\n       */\n      min: {\n        type: Number,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       * @type {number}\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n    };\n  }\n\n  static get constraints() {\n    return [...super.constraints, 'min', 'max', 'step'];\n  }\n\n  constructor() {\n    super();\n    this._setType('number');\n  }\n\n  /** @protected */\n  get slotStyles() {\n    const tag = this.localName;\n    return [\n      `\n        ${tag} input[type=\"number\"]::-webkit-outer-spin-button,\n        ${tag} input[type=\"number\"]::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n\n        ${tag} input[type=\"number\"] {\n          -moz-appearance: textfield;\n        }\n\n        ${tag}[dir='rtl'] input[type=\"number\"]::placeholder {\n          direction: rtl;\n        }\n\n        ${tag}[dir='rtl']:not([has-controls]) input[type=\"number\"]::placeholder {\n          text-align: left;\n        }\n      `\n    ];\n  }\n\n  /**\n   * Used by `ClearButtonMixin` as a reference to the clear button element.\n   * @protected\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this.inputElement) {\n      this.inputElement.min = this.min;\n      this.inputElement.max = this.max;\n      this.__applyStep(this.step);\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      })\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n  }\n\n  /** @private */\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  /** @private */\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _constraintsChanged(required, min, max, _step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = (n) => !n && n !== 0;\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else if (!required) {\n      this.invalid = false;\n    }\n  }\n\n  /** @private */\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  /** @private */\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  /** @private */\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if ((this.min == 0 && incr < 0) || (this.max == 0 && incr > 0) || (this.max == 0 && this.min == 0)) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) && (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else if (this._getIncrement(1, value - this.step) > this.max) {\n          value -= 2 * this.step;\n          // FIXME(yuriy): find a proper solution to make correct step back\n        } else {\n          value -= this.step;\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  /** @private */\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue), this._getMultiplier(step), this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    }\n    return currentValue / multiplier;\n  }\n\n  /** @private */\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  /** @private */\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return 10 ** this._getDecimalCount(number);\n    }\n  }\n\n  /** @private */\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    }\n    return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n  }\n\n  /** @private */\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  /** @private */\n  __applyStep(step) {\n    if (this.inputElement) {\n      this.inputElement.step = this.__validateByStep ? step : 'any';\n    }\n  }\n\n  /**\n   * @param {number} newVal\n   * @param {number | undefined} oldVal\n   * @protected\n   */\n  _stepChanged(newVal) {\n    // TODO: refactor to not have initial value\n    // https://github.com/vaadin/vaadin-text-field/issues/435\n\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n\n    this.__applyStep(newVal);\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', newVal);\n  }\n\n  /** @private */\n  _minChanged(min) {\n    if (this.inputElement) {\n      this.inputElement.min = min;\n    }\n  }\n\n  /** @private */\n  _maxChanged(max) {\n    if (this.inputElement) {\n      this.inputElement.max = max;\n    }\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   * @override\n   */\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  /**\n   * Override an event listener from `ClearButtonMixin`\n   * to avoid adding a separate listener.\n   * @param {!KeyboardEvent} event\n   * @protected\n   * @override\n   */\n  _onKeyDown(event) {\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      this._increaseValue();\n    } else if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      this._decreaseValue();\n    }\n\n    super._onKeyDown(event);\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any).\n   * @return {boolean}\n   */\n  checkValidity() {\n    if (\n      this.inputElement &&\n      (this.required || this.min !== undefined || this.max !== undefined || this.__validateByStep)\n    ) {\n      return this.inputElement.checkValidity();\n    }\n    return !this.invalid;\n  }\n}\n\ncustomElements.define(NumberField.is, NumberField);\n", "/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/theme/lumo/vaadin-input-container.js';\nimport './vaadin-number-field-styles.js';\nimport '../../src/vaadin-number-field.js';\n"],
  "mappings": "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",
  "names": []
}
