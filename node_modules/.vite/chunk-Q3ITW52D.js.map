{
  "version": 3,
  "sources": ["../@vaadin/component-base/src/focus-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  'keydown',\n  () => {\n    keyboardActive = true;\n  },\n  { capture: true }\n);\n\nwindow.addEventListener(\n  'mousedown',\n  () => {\n    keyboardActive = false;\n  },\n  { capture: true }\n);\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport const FocusMixin = dedupingMixin(\n  (superclass) =>\n    class FocusMixinClass extends superclass {\n      /**\n       * @protected\n       * @return {boolean}\n       */\n      get _keyboardActive() {\n        return keyboardActive;\n      }\n\n      /** @protected */\n      ready() {\n        this.addEventListener('focusin', (e) => {\n          if (this._shouldSetFocus(e)) {\n            this._setFocused(true);\n          }\n        });\n\n        this.addEventListener('focusout', (e) => {\n          if (this._shouldRemoveFocus(e)) {\n            this._setFocused(false);\n          }\n        });\n\n        // In super.ready() other 'focusin' and 'focusout' listeners might be\n        // added, so we call it after our own ones to ensure they execute first.\n        // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n        // input field on iOS after \u201CDone\u201D is pressed.\n        super.ready();\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n\n        // in non-Chrome browsers, blur does not fire on the element when it is disconnected.\n        // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n        if (this.hasAttribute('focused')) {\n          this._setFocused(false);\n        }\n      }\n\n      /**\n       * Override to change how focused and focus-ring attributes are set.\n       *\n       * @param {boolean} focused\n       * @protected\n       */\n      _setFocused(focused) {\n        this.toggleAttribute('focused', focused);\n\n        // focus-ring is true when the element was focused from the keyboard.\n        // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n        this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n      }\n\n      /**\n       * Override to define if the field receives focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetFocus(_event) {\n        return true;\n      }\n\n      /**\n       * Override to define if the field loses focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldRemoveFocus(_event) {\n        return true;\n      }\n    }\n);\n"],
  "mappings": ";;;;;AAAA,AASA,IAAI,iBAAiB;AAIrB,OAAO,iBACL,WACA,MAAM;AACJ,mBAAiB;AACnB,GACA,EAAE,SAAS,KAAK,CAClB;AAEA,OAAO,iBACL,aACA,MAAM;AACJ,mBAAiB;AACnB,GACA,EAAE,SAAS,KAAK,CAClB;AAOO,IAAM,aAAa,cACxB,CAAC,eACC,MAAM,wBAAwB,WAAW;AAAA,MAKnC,kBAAkB;AACpB,WAAO;AAAA,EACT;AAAA,EAGA,QAAQ;AACN,SAAK,iBAAiB,WAAW,CAAC,MAAM;AACtC,UAAI,KAAK,gBAAgB,CAAC,GAAG;AAC3B,aAAK,YAAY,IAAI;AAAA,MACvB;AAAA,IACF,CAAC;AAED,SAAK,iBAAiB,YAAY,CAAC,MAAM;AACvC,UAAI,KAAK,mBAAmB,CAAC,GAAG;AAC9B,aAAK,YAAY,KAAK;AAAA,MACxB;AAAA,IACF,CAAC;AAMD,UAAM,MAAM;AAAA,EACd;AAAA,EAGA,uBAAuB;AACrB,UAAM,qBAAqB;AAI3B,QAAI,KAAK,aAAa,SAAS,GAAG;AAChC,WAAK,YAAY,KAAK;AAAA,IACxB;AAAA,EACF;AAAA,EAQA,YAAY,SAAS;AACnB,SAAK,gBAAgB,WAAW,OAAO;AAIvC,SAAK,gBAAgB,cAAc,WAAW,KAAK,eAAe;AAAA,EACpE;AAAA,EASA,gBAAgB,QAAQ;AACtB,WAAO;AAAA,EACT;AAAA,EASA,mBAAmB,QAAQ;AACzB,WAAO;AAAA,EACT;AACF,CACJ;",
  "names": []
}
