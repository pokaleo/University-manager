{
  "version": 3,
  "sources": ["../@vaadin/crud/src/vaadin-crud-dialog.js", "../@vaadin/grid/src/vaadin-grid-filter.js", "../@vaadin/crud/src/vaadin-crud-include-mixin.js", "../@vaadin/crud/src/vaadin-crud-grid.js", "../@vaadin/crud/src/vaadin-crud-form.js", "../@vaadin/crud/src/vaadin-crud.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Dialog, DialogOverlay } from '@vaadin/dialog/src/vaadin-dialog.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-crud-dialog-overlay',\n  css`\n    [part='overlay'] {\n      max-width: 54em;\n      min-width: 20em;\n    }\n\n    [part='content'] {\n      display: flex;\n      flex-direction: column;\n      padding: 0;\n    }\n\n    [part='scroller'] {\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n      flex: auto;\n    }\n\n    [part='footer'] {\n      display: flex;\n      flex: none;\n      flex-direction: row-reverse;\n    }\n\n    :host([fullscreen]) {\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      padding: 0;\n    }\n\n    :host([fullscreen]) [part='overlay'] {\n      height: 100vh;\n      width: 100vw;\n      border-radius: 0 !important;\n    }\n\n    :host([fullscreen]) [part='content'] {\n      flex: 1;\n    }\n  `,\n  { moduleId: 'vaadin-crud-dialog-overlay-styles' }\n);\n\nlet memoizedTemplate;\n\nconst editorTemplate = html`\n  <div part=\"scroller\" role=\"group\" aria-labelledby=\"header\">\n    <div part=\"header\" id=\"header\">\n      <slot name=\"header\"></slot>\n    </div>\n    <slot name=\"form\"></slot>\n  </div>\n\n  <div part=\"footer\" role=\"toolbar\">\n    <slot name=\"save-button\"></slot>\n    <slot name=\"cancel-button\"></slot>\n    <slot name=\"delete-button\"></slot>\n  </div>\n`;\n\nclass CrudDialogOverlay extends DialogOverlay {\n  static get is() {\n    return 'vaadin-crud-dialog-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      const contentPart = memoizedTemplate.content.querySelector('[part=\"content\"]');\n      const defaultSlot = contentPart.querySelector('slot:not([name])');\n      contentPart.removeChild(defaultSlot);\n      contentPart.appendChild(editorTemplate.content.cloneNode(true));\n    }\n    return memoizedTemplate;\n  }\n}\n\ncustomElements.define('vaadin-crud-dialog-overlay', CrudDialogOverlay);\n\nclass CrudDialog extends Dialog {\n  /**\n   * Override template to provide custom overlay tag name.\n   */\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none;\n        }\n      </style>\n\n      <vaadin-crud-dialog-overlay\n        id=\"overlay\"\n        on-opened-changed=\"_onOverlayOpened\"\n        on-mousedown=\"_bringOverlayToFront\"\n        on-touchstart=\"_bringOverlayToFront\"\n        theme$=\"[[theme]]\"\n        modeless=\"[[modeless]]\"\n        with-backdrop=\"[[!modeless]]\"\n        resizable$=\"[[resizable]]\"\n        focus-trap\n      ></vaadin-crud-dialog-overlay>\n    `;\n  }\n}\n\ncustomElements.define('vaadin-crud-dialog', CrudDialog);\n", "/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/text-field/src/vaadin-text-field.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\n/**\n * `<vaadin-grid-filter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * and handlers for filtering the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column id=\"column\"></vaadin-grid-column>\n * ```\n * ```js\n * const column = document.querySelector('#column');\n * column.headerRenderer = (root, column) => {\n *   let filter = root.firstElementChild;\n *   if (!filter) {\n *     filter = document.createElement('vaadin-grid-filter');\n *     root.appendChild(filter);\n *   }\n *   filter.path = 'name.first';\n * };\n * column.renderer = (root, column, model) => {\n *   root.textContent = model.item.name.first;\n * };\n * ```\n *\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n */\nclass GridFilter extends class extends PolymerElement {} {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          max-width: 100%;\n        }\n\n        #filter {\n          width: 100%;\n          box-sizing: border-box;\n        }\n      </style>\n      <slot name=\"filter\">\n        <vaadin-text-field id=\"filter\" value=\"{{value}}\"></vaadin-text-field>\n      </slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-filter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for filtering the data.\n       */\n      path: String,\n\n      /**\n       * Current filter value.\n       */\n      value: {\n        type: String,\n        notify: true\n      },\n\n      /** @private */\n      _connected: Boolean\n    };\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._connected = true;\n  }\n\n  static get observers() {\n    return ['_filterChanged(path, value, _connected)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    const child = this.firstElementChild;\n    if (child && child.getAttribute('slot') !== 'filter') {\n      console.warn('Make sure you have assigned slot=\"filter\" to the child elements of <vaadin-grid-filter>');\n      child.setAttribute('slot', 'filter');\n    }\n  }\n\n  /** @private */\n  _filterChanged(path, value, connected) {\n    if (path === undefined || value === undefined || !connected) {\n      return;\n    }\n    if (this._previousValue === undefined && value === '') {\n      return;\n    }\n    this._previousValue = value;\n\n    this._debouncerFilterChanged = Debouncer.debounce(this._debouncerFilterChanged, timeOut.after(200), () => {\n      this.dispatchEvent(new CustomEvent('filter-changed', { bubbles: true }));\n    });\n  }\n\n  focus() {\n    this.$.filter.focus();\n  }\n}\n\ncustomElements.define(GridFilter.is, GridFilter);\n\nexport { GridFilter };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\n\n/**\n * @polymerMixin\n */\nexport const IncludedMixin = (superClass) =>\n  class IncludedMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * A list of item fields that should not be mapped to form fields.\n         *\n         * When [`include`](#/elements/vaadin-crud-form#property-include) is defined, this property is ignored.\n         *\n         * Default is to exclude any private property.\n         *\n         * @type {string | RegExp}\n         */\n        exclude: {\n          value: '^_',\n          observer: '__onExcludeChange'\n        },\n\n        /**\n         * A list of item properties that should be mapped to form fields.\n         *\n         * When it is defined [`exclude`](#/elements/vaadin-crud-form#property-exclude) is ignored.\n         *\n         * @type {string | !Array<string> | undefined}\n         */\n        include: {\n          observer: '__onIncludeChange'\n        }\n      };\n    }\n\n    /** @private */\n    __onExcludeChange(exclude) {\n      if (typeof exclude == 'string') {\n        this.exclude = exclude ? RegExp(exclude.replace(/, */g, '|'), 'i') : undefined;\n      }\n    }\n\n    /** @private */\n    __onIncludeChange(include) {\n      if (typeof include == 'string') {\n        this.include = include ? include.split(/, */) : undefined;\n      } else if (!this._fields && Array.isArray(include)) {\n        const item = {};\n        this.include.forEach((path) => this.__set(path, null, item));\n        this._configure(item);\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport '@vaadin/grid/src/vaadin-grid-column.js';\nimport '@vaadin/grid/src/vaadin-grid-column-group.js';\nimport '@vaadin/grid/src/vaadin-grid-sorter.js';\nimport '@vaadin/grid/src/vaadin-grid-filter.js';\nimport './vaadin-crud-edit-column.js';\nimport { Grid } from '@vaadin/grid/src/vaadin-grid.js';\nimport { IncludedMixin } from './vaadin-crud-include-mixin.js';\n\n/**\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\n *\n * @extends Grid\n * @mixes IncludedMixin\n * @private\n */\nclass CrudGrid extends IncludedMixin(Grid) {\n  static get is() {\n    return 'vaadin-crud-grid';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Disable filtering in the generated columns.\n       * @attr {boolean} no-filter\n       */\n      noFilter: Boolean,\n\n      /**\n       * Disable sorting in the generated columns.\n       * @attr {boolean} no-sort\n       */\n      noSort: Boolean,\n\n      /**\n       * Do not add headers to columns.\n       * @attr {boolean} no-head\n       */\n      noHead: Boolean,\n\n      /** @private */\n      __hideEditColumn: Boolean\n    };\n  }\n\n  static get observers() {\n    return ['__onItemsChange(items)', '__onHideEditColumnChange(hideEditColumn)'];\n  }\n\n  /** @private */\n  __onItemsChange(items) {\n    if ((!this.dataProvider || this.dataProvider == this._arrayDataProvider) && !this.include && items && items[0]) {\n      this._configure(items[0]);\n    }\n  }\n\n  /** @private */\n  __onHideEditColumnChange() {\n    if (this.firstChild) {\n      this.__toggleEditColumn();\n    }\n  }\n\n  /** @private */\n  __toggleEditColumn() {\n    const el = this.querySelector('vaadin-crud-edit-column');\n    if (this.hideEditColumn) {\n      el && this.removeChild(el);\n    } else if (!el) {\n      this.appendChild(document.createElement('vaadin-crud-edit-column'));\n    }\n  }\n\n  /** @private */\n  __dataProviderWrapper(params, callback) {\n    this.__dataProvider(params, (items, size) => {\n      if (this.innerHTML == '' && !this.include && items[0]) {\n        this._configure(items[0]);\n      }\n      callback(items, size);\n    });\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    if (this._arrayDataProvider == dataProvider) {\n      super._dataProviderChanged(dataProvider, oldDataProvider);\n    } else if (this.__dataProviderWrapper != dataProvider) {\n      this.innerHTML = '';\n      this.__dataProvider = dataProvider;\n      this.dataProvider = this.__dataProviderWrapper;\n      super._dataProviderChanged(this.__dataProviderWrapper, oldDataProvider);\n    }\n  }\n\n  /**\n   * Auto-generate grid columns based on the JSON structure of the object provided.\n   *\n   * Method will be executed when items or dataProvider is assigned.\n   * @private\n   */\n  _configure(item) {\n    this.innerHTML = '';\n    this.__createColumns(this, item, undefined, this.__getPropertyDepth(item));\n    this.__toggleEditColumn();\n  }\n\n  /**\n   * Return the deepest property depth of the object\n   * @private\n   */\n  __getPropertyDepth(object) {\n    if (!object || typeof object !== 'object') {\n      return 0;\n    }\n\n    return Object.keys(object).reduce((deepest, prop) => {\n      if (this.exclude && this.exclude.test(prop)) {\n        return deepest;\n      }\n      return Math.max(deepest, 1 + this.__getPropertyDepth(object[prop]));\n    }, 0);\n  }\n\n  /**\n   * Parse the camelCase column names into sentence case headers.\n   * @param {string} path\n   * @return {string}\n   * @protected\n   */\n  _generateHeader(path) {\n    return path\n      .substr(path.lastIndexOf('.') + 1)\n      .replace(/([A-Z])/g, '-$1')\n      .toLowerCase()\n      .replace(/-/g, ' ')\n      .replace(/^./, (match) => match.toUpperCase());\n  }\n\n  /** @private */\n  __createColumn(parent, path) {\n    let col;\n    if (!this.noFilter && !this.noSort && !parent.__sortColumnGroup) {\n      // This crud-grid has both a sorter and a filter, but neither has yet been\n      // created => col should become the sorter group column\n      col = this.__createGroup(parent);\n      col.__sortColumnGroup = true;\n      // Create the filter column under this sorter group column\n      this.__createColumn(col, path);\n    } else {\n      // In all other cases, col should be a regular column with a renderer\n      col = document.createElement('vaadin-grid-column');\n      parent.appendChild(col);\n      col.renderer = (root, _column, model) => {\n        root.textContent = path ? this.get(path, model.item) : model.item;\n      };\n    }\n\n    if (!this.noHead && path) {\n      // Create a header renderer for the column (or column group)\n      col.headerRenderer = (root) => {\n        if (root.firstElementChild) {\n          return;\n        }\n\n        const label = this._generateHeader(path);\n\n        if (col.__sortColumnGroup || (this.noFilter && !this.noSort)) {\n          // The column is either the sorter group column or the root level\n          // sort column (in case a filter isn't used at all) => add the sort indicator\n          const sorter = document.createElement('vaadin-grid-sorter');\n          sorter.setAttribute('path', path);\n          // TODO: Localize aria labels\n          sorter.setAttribute('aria-label', `Sort by ${label}`);\n          sorter.textContent = label;\n          root.appendChild(sorter);\n        } else if (!this.noFilter) {\n          // Filtering is enabled in this crud-grid, create the filter element\n          const filter = document.createElement('vaadin-grid-filter');\n          filter.setAttribute('path', path);\n          // TODO: Localize aria labels\n          filter.setAttribute('aria-label', `Filter by ${label}`);\n          filter.style.display = 'flex';\n\n          const textField = window.document.createElement('vaadin-text-field');\n          textField.setAttribute('theme', 'small');\n          textField.setAttribute('slot', 'filter');\n          textField.setAttribute('focus-target', true);\n          textField.style.width = '100%';\n          this.noSort && (textField.placeholder = label);\n          textField.addEventListener('value-changed', function (event) {\n            filter.value = event.detail.value;\n          });\n\n          filter.appendChild(textField);\n          root.appendChild(filter);\n        } else if (this.noSort && this.noFilter) {\n          // Neither sorter nor filter are enabled, just add the label\n          root.textContent = label;\n        }\n      };\n    }\n  }\n\n  /**\n   * Creates the column structure for the (sub)object.\n   *\n   * @param {HTMLElement} parent May be the crud-grid or a column group.\n   * @param {Object} object The object to create the sub-columns for.\n   * @param {string} path The property path from the root item to the object.\n   * @param {number} depth The depth of the object in the object hierarchy.\n   * @private\n   **/\n  __createColumns(parent, object, path, depth) {\n    if (object && typeof object === 'object') {\n      // Iterate over the object properties\n      Object.keys(object).forEach((prop) => {\n        if (!this.include && this.exclude && this.exclude.test(prop)) {\n          return;\n        }\n        // Sub-object of the current object\n        const subObject = object[prop];\n        // Full path to the sub-object\n        const subObjectPath = path ? `${path}.${prop}` : prop;\n\n        // The column element for the sub-object\n        let subObjectColumn = parent;\n        if (!this.noHead && depth > 1) {\n          const isSubObject = subObject && typeof subObject === 'object';\n          // If the sub-object is an actual object, create a column group with the property\n          // name as the header text, otherwise create a group without a header\n          subObjectColumn = this.__createGroup(parent, isSubObject ? prop : undefined);\n        }\n\n        // Run recursively for the sub-object level\n        this.__createColumns(subObjectColumn, subObject, subObjectPath, depth - 1);\n      });\n    } else if (depth > 1) {\n      // The object has been fully traversed, but empty wrapping column\n      // groups are still needed to complete the full object depth\n      this.__createColumns(this.__createGroup(parent), undefined, path, depth - 1);\n    } else {\n      // The column group depth is complete, create the actual leaf column\n      this.__createColumn(parent, path);\n    }\n  }\n\n  /** @private */\n  __createGroup(parent, header) {\n    const grp = document.createElement('vaadin-grid-column-group');\n    if (header) {\n      grp.header = this.__capitalize(header);\n    }\n    parent.appendChild(grp);\n    return grp;\n  }\n\n  /** @private */\n  __capitalize(path) {\n    return path\n      .toLowerCase()\n      .replace(/([^\\w]+)/g, ' ')\n      .trim()\n      .replace(/^./, (c) => c.toUpperCase());\n  }\n\n  /** @private */\n  __set(path, val, obj) {\n    if (obj && path) {\n      path\n        .split('.')\n        .slice(0, -1)\n        .reduce((o, p) => (o[p] = o[p] || {}), obj);\n      this.set(path, val, obj);\n    }\n  }\n}\n\ncustomElements.define(CrudGrid.is, CrudGrid);\n\nexport { CrudGrid };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport '@vaadin/text-field/src/vaadin-text-field.js';\nimport { FormLayout } from '@vaadin/form-layout/src/vaadin-form-layout.js';\nimport { IncludedMixin } from './vaadin-crud-include-mixin.js';\n\n/**\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\n *\n * @extends FormLayout\n * @mixes IncludedMixin\n * @private\n */\nclass CrudForm extends IncludedMixin(FormLayout) {\n  static get is() {\n    return 'vaadin-crud-form';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The item being edited.\n       * @type {unknown}\n       */\n      item: Object\n    };\n  }\n\n  static get observers() {\n    return ['__onItemChange(item)'];\n  }\n\n  /**\n   * Auto-generate form fields based on the JSON structure of the object provided.\n   *\n   * If not called, the method will be executed the first time an item is assigned.\n   * @param {unknown} object\n   * @protected\n   */\n  _configure(object) {\n    this.innerHTML = '';\n    this._fields = [];\n    this.__createFields(this, object);\n    this._updateLayout();\n  }\n\n  /** @private */\n  __onItemChange(item) {\n    if (!this._fields) {\n      this._configure(item);\n    }\n  }\n\n  /** @private */\n  __createField(parent, path) {\n    const field = document.createElement('vaadin-text-field');\n    field.label = this.__capitalize(path);\n    field.path = path;\n    field.required = true;\n    parent.appendChild(field);\n    this._fields.push(field);\n    return field;\n  }\n\n  /** @private */\n  __createFields(parent, object, path) {\n    Object.keys(object).forEach((prop) => {\n      if (!this.include && this.exclude && this.exclude.test(prop)) {\n        return;\n      }\n      const newPath = (path ? `${path}.` : '') + prop;\n      if (object[prop] && typeof object[prop] === 'object') {\n        this.__createFields(parent, object[prop], newPath);\n      } else {\n        this.__createField(parent, newPath);\n      }\n    });\n    if (!this._fields.length) {\n      this._fields = undefined;\n    }\n  }\n\n  /** @private */\n  __capitalize(path) {\n    return path\n      .toLowerCase()\n      .replace(/([^\\w]+)/g, ' ')\n      .trim()\n      .replace(/^./, (c) => c.toUpperCase());\n  }\n\n  /** @private */\n  __set(path, val, obj) {\n    if (obj && path) {\n      path\n        .split('.')\n        .slice(0, -1)\n        .reduce((o, p) => (o[p] = o[p] || {}), obj);\n      this.set(path, val, obj);\n    }\n  }\n}\n\ncustomElements.define(CrudForm.is, CrudForm);\n\nexport { CrudForm };\n", "/**\n * @license\n * Copyright (c) 2018 - 2022 Vaadin Ltd.\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport '@vaadin/dialog/src/vaadin-dialog.js';\nimport '@vaadin/confirm-dialog/src/vaadin-confirm-dialog.js';\nimport '@vaadin/vaadin-license-checker/vaadin-license-checker.js';\nimport './vaadin-crud-dialog.js';\nimport './vaadin-crud-grid.js';\nimport './vaadin-crud-form.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { SlotMixin } from '@vaadin/component-base/src/slot-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst HOST_PROPS = {\n  save: [{ attr: 'disabled', prop: '__isDirty', parseProp: '__isSaveBtnDisabled' }, { prop: 'i18n.saveItem' }],\n  cancel: [{ prop: 'i18n.cancel' }],\n  delete: [{ attr: 'hidden', prop: '__isNew', parseProp: (prop) => prop }, { prop: 'i18n.deleteItem' }]\n};\n\n/**\n * `<vaadin-crud>` is a Web Component for [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations.\n *\n * ### Quick Start\n *\n * Assign an array to the [`items`](#/elements/vaadin-crud#property-items) property.\n *\n * A grid and an editor will be automatically generated and configured based on the data structure provided.\n *\n * #### Example:\n * ```html\n * <vaadin-crud items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n *                      {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'></vaadin-crud>\n * ```\n *\n * ### Data Provider Function\n *\n * Otherwise, you can provide a [`dataProvider`](#/elements/vaadin-crud#property-dataProvider) function.\n * #### Example:\n * ```html\n * <vaadin-crud></vaadin-crud>\n * ```\n * ```js\n * const crud = document.querySelector('vaadin-crud');\n * const users = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'}, ...];\n * crud.dataProvider = function(params, callback) {\n *   const chunk = users.slice(params.page * params.pageSize, params.page * params.pageSize + params.pageSize);\n *   callback(chunk, people.length);\n * };\n * ```\n *\n * NOTE: The auto-generated editor only supports string types. If you need to handle special cases\n * customizing the editor is discussed below.\n *\n * ### Customization\n *\n * Alternatively you can fully configure the component by using `slot` names.\n *\n * Slot name | Description\n * ----------------|----------------\n * `grid` | To replace the auto-generated grid with a custom one.\n * `form` | To replace the auto-generated form.\n * `toolbar` | To replace the toolbar content. Add an element with the attribute `new-button` for the new item action.\n *\n * #### Example:\n *\n * ```html\n * <vaadin-crud\n *   id=\"crud\"\n *   items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n *           {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'\n * >\n *   <vaadin-grid slot=\"grid\">\n *     <vaadin-crud-edit-column></vaadin-crud-edit-column>\n *     <vaadin-grid-column id=\"column1\"></vaadin-grid-column>\n *     <vaadin-grid-column id=\"column2\"></vaadin-grid-column>\n *   </vaadin-grid>\n *\n *   <vaadin-form-layout slot=\"form\">\n *     <vaadin-text-field label=\"First\" path=\"name\"></vaadin-text-field>\n *     <vaadin-text-field label=\"Surname\" path=\"surname\"></vaadin-text-field>\n *   </vaadin-form-layout>\n *\n *   <div slot=\"toolbar\">\n *     Total singers: [[size]]\n *     <button new-button>New singer</button>\n *   </div>\n * </vaadin-crud>\n * ```\n * ```js\n * const crud = document.querySelector('#crud');\n *\n * const column1 = document.querySelector('#column1');\n * column1.headerRenderer = (root, column) => {\n *   root.textContent = 'Name';\n * };\n * column1.renderer = (root, column, model) => {\n *   root.textContent = model.item.name;\n * };\n *\n * const column2 = document.querySelector('#column2');\n * column2.headerRenderer = (root, column) => {\n *   root.textContent = 'Surname';\n * };\n * column2.renderer = (root, column, model) => {\n *   root.textContent = model.item.surname;\n * };\n * ```\n *\n * ### Helpers\n *\n * The following elements are used to auto-configure the grid and the editor\n * - [`<vaadin-crud-edit-column>`](#/elements/vaadin-crud-edit-column)\n * - `<vaadin-crud-grid>` - can be replaced with custom [`<vaadin-grid>`](#/elements/vaadin-grid)\n * - `<vaadin-crud-form>` - can be replaced with custom [`<vaadin-form-layout>`](#/elements/vaadin-form-layout)\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `toolbar` | Toolbar container at the bottom. By default it contains the the `new` button\n *\n * The following custom properties are available:\n *\n * Custom Property | Description | Default\n * ----------------|----------------\n * --vaadin-crud-editor-max-height | max height of editor when opened on the bottom | 40%\n * --vaadin-crud-editor-max-width | max width of editor when opened on the side | 40%\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} editor-opened-changed - Fired when the `editorOpened` property changes.\n * @fires {CustomEvent} edited-item-changed - Fired when `editedItem` property changes.\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} size-changed - Fired when the `size` property changes.\n * @fires {CustomEvent} new - Fired when user wants to create a new item.\n * @fires {CustomEvent} edit - Fired when user wants to edit an existing item.\n * @fires {CustomEvent} delete - Fired when user wants to delete item.\n * @fires {CustomEvent} save - Fired when user wants to save a new or an existing item.\n * @fires {CustomEvent} cancel - Fired when user discards edition.\n *\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes SlotMixin\n * @mixes ThemableMixin\n */\nclass Crud extends SlotMixin(ControllerMixin(ElementMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          width: 100%;\n          height: 400px;\n          --vaadin-crud-editor-max-height: 40%;\n          --vaadin-crud-editor-max-width: 40%;\n        }\n\n        :host,\n        #main {\n          display: flex;\n          flex-direction: column;\n          align-self: stretch;\n          position: relative;\n          overflow: hidden;\n        }\n\n        #main {\n          flex: 1 1 100%;\n          height: 100%;\n        }\n\n        :host([hidden]),\n        [hidden] {\n          display: none !important;\n        }\n\n        [part='toolbar'] {\n          display: flex;\n          flex-shrink: 0;\n          align-items: baseline;\n          justify-content: flex-end;\n        }\n\n        :host([no-toolbar]) [part='toolbar'] {\n          display: none;\n        }\n\n        #container {\n          display: flex;\n          height: 100%;\n        }\n\n        :host([editor-position='bottom']) #container {\n          flex-direction: column;\n        }\n\n        [part='editor'] {\n          z-index: 1;\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n        }\n\n        :host(:not([editor-position=''])[editor-opened]:not([fullscreen])) [part='editor'] {\n          flex: 1 0 100%;\n        }\n\n        :host([editor-position='bottom'][editor-opened]:not([fullscreen])) [part='editor'] {\n          max-height: var(--vaadin-crud-editor-max-height);\n        }\n\n        :host([editor-position='aside'][editor-opened]:not([fullscreen])) [part='editor'] {\n          min-width: 300px;\n          max-width: var(--vaadin-crud-editor-max-width);\n        }\n\n        [part='scroller'] {\n          display: flex;\n          flex-direction: column;\n          overflow: auto;\n          flex: auto;\n        }\n\n        [part='footer'] {\n          display: flex;\n          flex: none;\n          flex-direction: row-reverse;\n        }\n      </style>\n\n      <div id=\"container\">\n        <div id=\"main\">\n          <slot name=\"grid\">\n            <vaadin-crud-grid\n              theme$=\"[[theme]]\"\n              id=\"grid\"\n              include=\"[[include]]\"\n              exclude=\"[[exclude]]\"\n              no-sort=\"[[noSort]]\"\n              no-filter=\"[[noFilter]]\"\n              no-head=\"[[noHead]]\"\n              hide-edit-column=\"[[editOnClick]]\"\n            ></vaadin-crud-grid>\n          </slot>\n\n          <div id=\"toolbar\" part=\"toolbar\" on-click=\"__new\">\n            <slot name=\"toolbar\">\n              <vaadin-button new-button=\"\" id=\"new\" theme=\"primary\">[[i18n.newItem]]</vaadin-button>\n            </slot>\n          </div>\n        </div>\n\n        <div id=\"editor\" part=\"editor\" hidden$=\"[[__computeEditorHidden(editorOpened, _fullscreen, editorPosition)]]\">\n          <div part=\"scroller\" id=\"scroller\" role=\"group\" aria-labelledby=\"header\">\n            <div part=\"header\" id=\"header\">\n              <slot name=\"header\"></slot>\n            </div>\n            <slot name=\"form\"></slot>\n          </div>\n\n          <div part=\"footer\" role=\"toolbar\">\n            <slot name=\"save-button\"></slot>\n            <slot name=\"cancel-button\"></slot>\n            <slot name=\"delete-button\"></slot>\n          </div>\n        </div>\n      </div>\n\n      <vaadin-crud-dialog\n        id=\"dialog\"\n        opened=\"[[__computeDialogOpened(editorOpened, _fullscreen, editorPosition)]]\"\n        aria-label=\"[[__editorAriaLabel]]\"\n        no-close-on-outside-click=\"[[__isDirty]]\"\n        no-close-on-esc=\"[[__isDirty]]\"\n        theme$=\"[[theme]]\"\n        on-opened-changed=\"__onDialogOpened\"\n      ></vaadin-crud-dialog>\n\n      <vaadin-confirm-dialog\n        theme$=\"[[theme]]\"\n        id=\"confirmCancel\"\n        on-confirm=\"__confirmCancel\"\n        cancel\n        confirm-text=\"[[i18n.confirm.cancel.button.confirm]]\"\n        cancel-text=\"[[i18n.confirm.cancel.button.dismiss]]\"\n        header=\"[[i18n.confirm.cancel.title]]\"\n        message=\"[[i18n.confirm.cancel.content]]\"\n        confirm-theme=\"primary\"\n      ></vaadin-confirm-dialog>\n\n      <vaadin-confirm-dialog\n        theme$=\"[[theme]]\"\n        id=\"confirmDelete\"\n        on-confirm=\"__confirmDelete\"\n        cancel\n        confirm-text=\"[[i18n.confirm.delete.button.confirm]]\"\n        cancel-text=\"[[i18n.confirm.delete.button.dismiss]]\"\n        header=\"[[i18n.confirm.delete.title]]\"\n        message=\"[[i18n.confirm.delete.content]]\"\n        confirm-theme=\"primary error\"\n      ></vaadin-confirm-dialog>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-crud';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A reference to the grid used for displaying the item list\n       * @private\n       */\n      _grid: {\n        type: HTMLElement,\n        observer: '__onGridChange'\n      },\n\n      /**\n       * A reference to the editor component which will be teleported to the dialog\n       * @private\n       */\n      _form: {\n        type: HTMLElement,\n        observer: '__onFormChange'\n      },\n\n      /**\n       * A reference to the save button which will be teleported to the dialog\n       * @private\n       */\n      _saveButton: {\n        type: HTMLElement,\n        observer: '__onSaveButtonChange'\n      },\n\n      /**\n       * A reference to the save button which will be teleported to the dialog\n       * @private\n       */\n      _deleteButton: {\n        type: HTMLElement,\n        observer: '__onDeleteButtonChange'\n      },\n\n      /**\n       * A reference to the save button which will be teleported to the dialog\n       * @private\n       */\n      _cancelButton: {\n        type: HTMLElement,\n        observer: '__onCancelButtonChange'\n      },\n\n      /**\n       * A reference to the editor header element will be teleported to the dialog.\n       * @private\n       */\n      _headerNode: {\n        type: HTMLElement\n      },\n\n      /**\n       * An array containing the items which will be stamped to the column template instances.\n       * @type {Array<unknown> | undefined}\n       */\n      items: {\n        type: Array,\n        notify: true,\n        observer: '__onItemsChange'\n      },\n\n      /**\n       * The item being edited in the dialog.\n       * @type {unknown}\n       */\n      editedItem: {\n        type: Object,\n        observer: '__onItemChange',\n        notify: true\n      },\n\n      /**\n       * Sets how editor will be presented on desktop screen.\n       *\n       * Accepted values are:\n       *   - `` (default) - form will open as overlay\n       *   - `bottom` - form will open below the grid\n       *   - `aside` - form will open on the grid side (_right_, if lft and _left_ if rtl)\n       * @attr {bottom|aside} editor-position\n       * @type {!CrudEditorPosition}\n       */\n      editorPosition: {\n        type: String,\n        value: '',\n        reflectToAttribute: true,\n        observer: '__onEditorPositionChange'\n      },\n\n      /**\n       * Enables user to click on row to edit it.\n       * Note: When enabled, auto-generated grid won't show the edit column.\n       * @attr {boolean} edit-on-click\n       * @type {boolean}\n       */\n      editOnClick: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       * `params.pageSize` Current page size\n       * `params.filters` Currently applied filters\n       * `params.sortOrders` Currently applied sorting orders\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items\n       * @type {CrudDataProvider | undefined}\n       */\n      dataProvider: {\n        type: Function,\n        observer: '__onDataProviderChange'\n      },\n\n      /**\n       * Disable filtering when grid is autoconfigured.\n       * @attr {boolean} no-filter\n       */\n      noFilter: Boolean,\n\n      /**\n       * Disable sorting when grid is autoconfigured.\n       * @attr {boolean} no-sort\n       */\n      noSort: Boolean,\n\n      /**\n       * Remove grid headers when it is autoconfigured.\n       * @attr {boolean} no-head\n       */\n      noHead: Boolean,\n\n      /**\n       * A comma-separated list of fields to include in the generated grid and the generated editor.\n       *\n       * It can be used to explicitly define the field order.\n       *\n       * When it is defined [`exclude`](#/elements/vaadin-crud#property-exclude) is ignored.\n       *\n       * Default is undefined meaning that all properties in the object should be mapped to fields.\n       */\n      include: String,\n\n      /**\n       * A comma-separated list of fields to be excluded from the generated grid and the generated editor.\n       *\n       * When [`include`](#/elements/vaadin-crud#property-include) is defined, this parameter is ignored.\n       *\n       * Default is to exclude all private fields (those properties starting with underscore)\n       */\n      exclude: String,\n\n      /**\n       * Reflects the opened status of the editor.\n       */\n      editorOpened: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        observer: '__onOpenedChanged'\n      },\n\n      /**\n       * Number of items in the data set which is reported by the grid.\n       * Typically it reflects the number of filtered items displayed in the grid.\n       */\n      size: {\n        type: Number,\n        readOnly: true,\n        notify: true\n      },\n\n      /**\n       * Controls visibility state of toolbar.\n       * When set to false toolbar is hidden and shown when set to true.\n       * @attr {boolean} no-toolbar\n       */\n      noToolbar: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The object used to localize this component.\n       * For changing the default localization, change the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n       *\n       * ```\n       * {\n       *   newItem: 'New item',\n       *   editItem: 'Edit item',\n       *   saveItem: 'Save',\n       *   cancel: 'Cancel',\n       *   deleteItem: 'Delete...',\n       *   editLabel: 'Edit',\n       *   confirm: {\n       *     delete: {\n       *       title: 'Confirm delete',\n       *       content: 'Are you sure you want to delete the selected item? This action cannot be undone.',\n       *       button: {\n       *         confirm: 'Delete',\n       *         dismiss: 'Cancel'\n       *       }\n       *     },\n       *     cancel: {\n       *       title: 'Unsaved changes',\n       *       content: 'There are unsaved modifications to the item.',\n       *       button: {\n       *         confirm: 'Discard',\n       *         dismiss: 'Continue editing'\n       *       }\n       *     }\n       *   }\n       * }\n       * ```\n       *\n       * @type {!CrudI18n}\n       * @default {English/US}\n       */\n      i18n: {\n        type: Object,\n        value: function () {\n          return {\n            newItem: 'New item',\n            editItem: 'Edit item',\n            saveItem: 'Save',\n            cancel: 'Cancel',\n            deleteItem: 'Delete...',\n            editLabel: 'Edit',\n            confirm: {\n              delete: {\n                title: 'Delete item',\n                content: 'Are you sure you want to delete this item? This action cannot be undone.',\n                button: {\n                  confirm: 'Delete',\n                  dismiss: 'Cancel'\n                }\n              },\n              cancel: {\n                title: 'Discard changes',\n                content: 'There are unsaved changes to this item.',\n                button: {\n                  confirm: 'Discard',\n                  dismiss: 'Cancel'\n                }\n              }\n            }\n          };\n        }\n      },\n\n      /** @private */\n      __editorAriaLabel: String,\n\n      /** @private */\n      __isDirty: Boolean,\n\n      /** @private */\n      __isNew: Boolean,\n\n      /**\n       * @type {boolean}\n       * @protected\n       */\n      _fullscreen: {\n        type: Boolean,\n        observer: '__fullscreenChanged'\n      },\n\n      /**\n       * @type {string}\n       * @protected\n       */\n      _fullscreenMediaQuery: {\n        value: '(max-width: 600px), (max-height: 600px)'\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '__headerNodeChanged(_headerNode, __isNew, i18n.newItem, i18n.editItem)',\n      '__formChanged(_form, theme, include, exclude)',\n      '__onI18Change(i18n, _grid)',\n      '__onEditOnClickChange(editOnClick, _grid)',\n      '__hostPropsChanged(' +\n        HOST_PROPS.save.map(({ prop }) => prop).join(',') +\n        ',' +\n        HOST_PROPS.cancel.map(({ prop }) => prop).join(',') +\n        ',' +\n        HOST_PROPS.delete.map(({ prop }) => prop).join(',') +\n        ')'\n    ];\n  }\n\n  /** @protected */\n  static _finalizeClass() {\n    super._finalizeClass();\n\n    const devModeCallback = window.Vaadin.developmentModeCallback;\n    const licenseChecker = devModeCallback && devModeCallback['vaadin-license-checker'];\n    if (typeof licenseChecker === 'function') {\n      licenseChecker(Crud);\n    }\n  }\n\n  /** @protected */\n  get slots() {\n    // NOTE: order in which the toolbar buttons are listed matters.\n    return {\n      ...super.slots,\n      header: () => {\n        return document.createElement('h3');\n      },\n      form: () => {\n        return document.createElement('vaadin-crud-form');\n      },\n      'save-button': () => {\n        const button = document.createElement('vaadin-button');\n        button.id = 'save';\n        button.setAttribute('theme', 'primary');\n        return button;\n      },\n      'cancel-button': () => {\n        const button = document.createElement('vaadin-button');\n        button.id = 'cancel';\n        button.setAttribute('theme', 'tertiary');\n        return button;\n      },\n      'delete-button': () => {\n        const button = document.createElement('vaadin-button');\n        button.id = 'delete';\n        button.setAttribute('theme', 'tertiary error');\n        return button;\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this.__onDomChange(info.addedNodes);\n    });\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.__editListener = (e) => this.__onCrudGridEdit(e);\n    this.__changeListener = (e) => this.__onFormChanges(e);\n    this.__saveBound = this.__save.bind(this);\n    this.__cancelBound = this.__cancel.bind(this);\n    this.__deleteBound = this.__delete.bind(this);\n    this.__gridSizeListener = this.__onGridSizeChanges.bind(this);\n    this.__boundEditOnClickListener = this.__editOnClickListener.bind(this);\n    this._grid = this.$.grid;\n    this.$.dialog.$.overlay.addEventListener('vaadin-overlay-outside-click', this.__cancelBound);\n    this.$.dialog.$.overlay.addEventListener('vaadin-overlay-escape-press', this.__cancelBound);\n    // Initialize the default buttons\n    this.__propagateHostAttributes();\n\n    this.addController(\n      new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\n        this._fullscreen = matches;\n      })\n    );\n  }\n\n  /** @private */\n  __isSaveBtnDisabled(isDirty) {\n    // Used instead of isDirty property binding in order to enable overriding of the behavior\n    // by overriding the method (i.e. from Flow component)\n    return !isDirty;\n  }\n\n  /** @private */\n  __headerNodeChanged(headerNode, isNew, newItem, editItem) {\n    if (headerNode) {\n      headerNode.textContent = isNew ? newItem : editItem;\n    }\n  }\n\n  /** @private */\n  __formChanged(form, theme, include, exclude) {\n    if (form) {\n      form.include = include;\n      form.exclude = exclude;\n      form.setAttribute('theme', theme);\n    }\n  }\n\n  /** @private */\n  __onI18Change(i18n, grid) {\n    if (!grid) {\n      return;\n    }\n\n    afterNextRender(grid, () => {\n      Array.from(grid.querySelectorAll('vaadin-crud-edit-column')).forEach((column) => {\n        column.ariaLabel = i18n.editLabel;\n      });\n    });\n  }\n\n  /** @private */\n  __onEditorPositionChange(editorPosition) {\n    if (Crud._isValidEditorPosition(editorPosition)) {\n      return;\n    }\n    this.editorPosition = '';\n  }\n\n  /** @private */\n  static _isValidEditorPosition(editorPosition) {\n    return ['bottom', 'aside'].indexOf(editorPosition) != -1;\n  }\n\n  /** @private */\n  __onOpenedChanged(opened, old) {\n    if (!opened && old) {\n      this.__closeEditor();\n    } else {\n      this.__onFormChange(this._form);\n    }\n\n    if (opened) {\n      this.__ensureChildren();\n    }\n\n    this.__toggleToolbar();\n\n    // Make sure to reset scroll position\n    this.$.scroller.scrollTop = 0;\n  }\n\n  /** @private */\n  __fullscreenChanged(fullscreen, oldFullscreen) {\n    if (fullscreen || oldFullscreen) {\n      this.__toggleToolbar();\n\n      this.__ensureChildren();\n\n      this.toggleAttribute('fullscreen', fullscreen);\n      this.$.dialog.$.overlay.toggleAttribute('fullscreen', fullscreen);\n    }\n  }\n\n  /** @private */\n  __toggleToolbar() {\n    // Hide toolbar to give more room for the editor when it's positioned below the grid\n    if (this.editorPosition === 'bottom' && !this._fullscreen) {\n      this.$.toolbar.style.display = this.editorOpened ? 'none' : '';\n    }\n  }\n\n  /** @private */\n  __moveChildNodes(target) {\n    const nodes = [this._headerNode, this._form, this._saveButton, this._cancelButton, this._deleteButton];\n    if (!nodes.every((node) => node instanceof HTMLElement)) {\n      return;\n    }\n\n    // Teleport header node, form, and the buttons to corresponding slots.\n    // NOTE: order in which buttons are moved matches the order of slots.\n    nodes.forEach((node) => {\n      target.appendChild(node);\n    });\n\n    // Wait to set label until slotted element has been moved.\n    setTimeout(() => {\n      this.__dialogAriaLabel = this._headerNode.textContent.trim();\n    });\n  }\n\n  /** @private */\n  __shouldOpenDialog(fullscreen, editorPosition) {\n    return editorPosition === '' || fullscreen;\n  }\n\n  /** @private */\n  __ensureChildren() {\n    if (this.__shouldOpenDialog(this._fullscreen, this.editorPosition)) {\n      // Move form to dialog\n      this.__moveChildNodes(this.$.dialog.$.overlay);\n    } else {\n      // Move form to crud\n      this.__moveChildNodes(this);\n    }\n  }\n\n  /** @private */\n  __computeDialogOpened(opened, fullscreen, editorPosition) {\n    // Only open dialog when editorPosition is \"\" or fullscreen is set\n    return this.__shouldOpenDialog(fullscreen, editorPosition) ? opened : false;\n  }\n\n  /** @private */\n  __computeEditorHidden(opened, fullscreen, editorPosition) {\n    // Only show editor when editorPosition is \"bottom\" or \"aside\"\n    if (['aside', 'bottom'].includes(editorPosition) && !fullscreen) {\n      return !opened;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  __onDialogOpened(event) {\n    this.editorOpened = event.detail.value;\n  }\n\n  /** @private */\n  __onDomChange(addedNodes) {\n    // TODO: restore default button when a corresponding slotted button is removed.\n    // Consider creating a controller to reuse custom helper logic from FieldMixin.\n    addedNodes\n      .filter((node) => node.nodeType === Node.ELEMENT_NODE)\n      .forEach((node) => {\n        const slotAttributeValue = node.getAttribute('slot');\n        if (!slotAttributeValue) {\n          return;\n        }\n\n        if (slotAttributeValue == 'grid') {\n          // Force to remove listener on previous grid first\n          this.__onEditOnClickChange(false, this._grid);\n          this._grid = node;\n          this.__onEditOnClickChange(this.editOnClick, this._grid);\n        } else if (slotAttributeValue == 'form') {\n          this._form = node;\n        } else if (slotAttributeValue.indexOf('button') >= 0) {\n          const [button] = slotAttributeValue.split('-');\n          this[`_${button}Button`] = node;\n        } else if (slotAttributeValue == 'header') {\n          this._headerNode = node;\n        }\n      });\n  }\n\n  /** @private */\n  __onCrudGridEdit(e) {\n    e.stopPropagation();\n    this.__confirmBeforeChangingEditedItem(e.detail.item);\n  }\n\n  /** @private */\n  __onFormChanges() {\n    this.__isDirty = true;\n  }\n\n  /** @private */\n  __onGridSizeChanges() {\n    this._setSize(this._grid.size);\n  }\n\n  /** @private */\n  __onGridChange(grid, old) {\n    if (old) {\n      old.removeEventListener('edit', this.__editListener);\n      old.removeEventListener('size-changed', this.__gridSizeListener);\n    }\n    if (this.items) {\n      this.__onItemsChange(this.items);\n    }\n    if (this.editedItem) {\n      this.__onItemChange(this.editedItem);\n    }\n    grid.addEventListener('edit', this.__editListener);\n    grid.addEventListener('size-changed', this.__gridSizeListener);\n    this.__onGridSizeChanges();\n  }\n\n  /** @private */\n  __onFormChange(form, old) {\n    if (old && old.parentElement) {\n      old.parentElement && old.parentElement.removeChild(old);\n      old.removeEventListener('change', this.__changeListener);\n      old.removeEventListener('input', this.__changeListener);\n    }\n    if (!form) {\n      return;\n    }\n    if (this.items) {\n      this.__onItemsChange(this.items);\n    }\n    if (this.editedItem) {\n      this.__onItemChange(this.editedItem);\n    }\n    form.addEventListener('change', this.__changeListener);\n    form.addEventListener('input', this.__changeListener);\n  }\n\n  /** @private */\n  __onSaveButtonChange(save, old) {\n    this.__setupSlottedButton(save, old, this.__saveBound);\n  }\n\n  /** @private */\n  __onDeleteButtonChange(deleteButton, old) {\n    this.__setupSlottedButton(deleteButton, old, this.__deleteBound);\n  }\n\n  /** @private */\n  __onCancelButtonChange(cancel, old) {\n    this.__setupSlottedButton(cancel, old, this.__cancelBound);\n  }\n\n  /** @private */\n  __setupSlottedButton(slottedButton, currentButton, clickListener) {\n    if (currentButton && currentButton.parentElement) {\n      currentButton.parentElement.removeChild(currentButton);\n    }\n\n    slottedButton.addEventListener('click', clickListener);\n  }\n\n  /** @private */\n  __hostPropsChanged() {\n    this.__propagateHostAttributes();\n  }\n\n  /** @private */\n  __propagateHostAttributes() {\n    this.__propagateHostAttributesToButton(this._saveButton, HOST_PROPS.save);\n    this.__propagateHostAttributesToButton(this._cancelButton, HOST_PROPS.cancel);\n    this.__propagateHostAttributesToButton(this._deleteButton, HOST_PROPS.delete);\n  }\n\n  /** @private */\n  __propagateHostAttributesToButton(button, props) {\n    // Ensure the slotted button element is present in the DOM.\n    // This is needed because the observer runs before `ready`.\n    if (button) {\n      props.forEach(({ attr, prop, parseProp }) => {\n        if (prop.indexOf('i18n') >= 0) {\n          button.textContent = this.i18n[prop.split('.')[1]];\n        } else {\n          if (typeof parseProp === 'string') {\n            this._setOrToggleAttribute(attr, this[parseProp](this[prop]), button);\n            return;\n          }\n\n          this._setOrToggleAttribute(attr, parseProp(this[prop]), button);\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _setOrToggleAttribute(name, value, node) {\n    if (!name || !node) {\n      return;\n    }\n\n    if (value) {\n      node.setAttribute(name, typeof value === 'boolean' ? '' : value);\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  /** @private */\n  __onDataProviderChange(dataProvider) {\n    if (this._grid) {\n      this._grid.dataProvider = this.__createDataProviderProxy(dataProvider);\n    }\n  }\n\n  /** @private */\n  __onEditOnClickChange(rowToEditChange, _grid) {\n    if (!_grid) {\n      return;\n    }\n\n    if (rowToEditChange) {\n      _grid.addEventListener('active-item-changed', this.__boundEditOnClickListener);\n    } else {\n      _grid.removeEventListener('active-item-changed', this.__boundEditOnClickListener);\n    }\n  }\n\n  /** @private */\n  __editOnClickListener(event) {\n    const item = event.detail.value;\n    if (this.editorOpened && this.__isDirty) {\n      this.__confirmBeforeChangingEditedItem(item);\n      return;\n    }\n    if (item) {\n      this.__edit(item);\n    } else if (!this.__keepOpened) {\n      this.__closeEditor();\n    }\n  }\n\n  /** @private */\n  __confirmBeforeChangingEditedItem(item, keepOpened) {\n    if (\n      this.editorOpened && // Editor opened\n      this.__isDirty && // Form change has been made\n      this.editedItem !== item // Item is different\n    ) {\n      this.$.confirmCancel.opened = true;\n      const listenOnce = (event) => {\n        event.preventDefault(); // prevent editor to get closed\n        if (item || keepOpened) {\n          this.__edit(item);\n          this.__clearItemAndKeepEditorOpened(item, keepOpened);\n        } else {\n          this.__closeEditor();\n        }\n        this.removeEventListener('cancel', listenOnce);\n      };\n      this.addEventListener('cancel', listenOnce);\n    } else {\n      this.__edit(item);\n      this.__clearItemAndKeepEditorOpened(item, keepOpened);\n    }\n  }\n\n  /** @private */\n  __clearItemAndKeepEditorOpened(item, keepOpened) {\n    if (!item) {\n      setTimeout(() => {\n        this.__keepOpened = keepOpened;\n        this.editedItem = this._grid.activeItem = undefined;\n      });\n    }\n  }\n\n  /** @private */\n  __createDataProviderProxy(dataProvider) {\n    return (params, callback) => {\n      const callbackProxy = (chunk, size) => {\n        if (chunk && chunk[0]) {\n          this.__model = chunk[0];\n        }\n\n        callback(chunk, size);\n      };\n\n      dataProvider(params, callbackProxy);\n    };\n  }\n\n  /** @private */\n  __onItemsChange(items) {\n    if (this.items && this.items[0]) {\n      this.__model = items[0];\n    }\n\n    if (this._grid) {\n      this._grid.items = items;\n    }\n  }\n\n  /** @private */\n  __onItemChange(item) {\n    if (!this._form) {\n      return;\n    }\n    if (item) {\n      if (!this._fields.length && this._form._configure) {\n        if (this.__model) {\n          this._form._configure(this.__model);\n        } else {\n          console.warn(\n            '<vaadin-crud> Unable to autoconfigure form because the data structure is unknown. ' +\n              'Either specify `include` or ensure at least one item is available beforehand.'\n          );\n        }\n      }\n      this._form.item = item;\n      this._fields.forEach((e) => {\n        const path = e.path || e.getAttribute('path');\n        path && (e.value = this.get(path, item));\n      });\n\n      this.__isNew = this.__isNew || (this.items && this.items.indexOf(item) < 0);\n      this.editorOpened = true;\n    }\n  }\n\n  /**\n   * A reference to all fields inside the [`_form`](#/elements/vaadin-crud#property-_form) element\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  get _fields() {\n    if (!this.__fields || !this.__fields.length) {\n      this.__fields = Array.from(this._form.querySelectorAll('*')).filter((e) => e.validate || e.checkValidity);\n    }\n    return this.__fields;\n  }\n\n  /** @private */\n  __validate() {\n    return this._fields.every((e) => (e.validate || e.checkValidity).call(e));\n  }\n\n  /** @private */\n  __setHighlightedItem(item) {\n    if (this._grid === this.$.grid) {\n      this._grid.selectedItems = item ? [item] : [];\n    }\n  }\n\n  /** @private */\n  __closeEditor() {\n    this.editorOpened = false;\n    this.__isDirty = false;\n    this.__setHighlightedItem(null);\n\n    // Delay changing the item in order not to modify editor while closing\n    setTimeout(() => this.__clearItemAndKeepEditorOpened(null, false));\n  }\n\n  /** @private */\n  __new(event) {\n    // This allows listening to parent element and fire only when clicking on default or custom new-button.\n    if (event.composedPath().filter((e) => e.nodeType == 1 && e.hasAttribute('new-button'))[0]) {\n      this.__confirmBeforeChangingEditedItem(null, true);\n    }\n  }\n\n  /** @private */\n  __edit(item) {\n    if (this.editedItem === item) {\n      return;\n    }\n    this.__setHighlightedItem(item);\n    this.__openEditor('edit', item);\n  }\n\n  /** @private */\n  __openEditor(type, item) {\n    this.__isDirty = false;\n    this.__isNew = !item;\n    const evt = this.dispatchEvent(\n      new CustomEvent(this.__isNew ? 'new' : 'edit', { detail: { item: item }, cancelable: true })\n    );\n    if (evt) {\n      this.editedItem = item || {};\n    } else {\n      this.editorOpened = true;\n    }\n  }\n\n  /** @private */\n  __save() {\n    if (!this.__validate()) {\n      return;\n    }\n\n    const item = { ...this.editedItem };\n    this._fields.forEach((e) => {\n      const path = e.path || e.getAttribute('path');\n      path && this.__set(path, e.value, item);\n    });\n    const evt = this.dispatchEvent(new CustomEvent('save', { detail: { item: item }, cancelable: true }));\n    if (evt) {\n      if (this.__isNew && !this.dataProvider) {\n        if (!this.items) {\n          this.items = [item];\n        } else {\n          this.items.push(item);\n        }\n      } else {\n        Object.assign(this.editedItem, item);\n      }\n      this._grid.clearCache();\n      this.__closeEditor();\n    }\n  }\n\n  /** @private */\n  __cancel() {\n    if (this.__isDirty) {\n      this.$.confirmCancel.opened = true;\n    } else {\n      this.__confirmCancel();\n    }\n  }\n\n  /** @private */\n  __confirmCancel() {\n    const evt = this.dispatchEvent(new CustomEvent('cancel', { detail: { item: this.editedItem }, cancelable: true }));\n    if (evt) {\n      this.__closeEditor();\n    }\n  }\n\n  /** @private */\n  __delete() {\n    this.$.confirmDelete.opened = true;\n  }\n\n  /** @private */\n  __confirmDelete() {\n    const evt = this.dispatchEvent(new CustomEvent('delete', { detail: { item: this.editedItem }, cancelable: true }));\n    if (evt) {\n      if (this.items && this.items.indexOf(this.editedItem) >= 0) {\n        this.items.splice(this.items.indexOf(this.editedItem), 1);\n      }\n      this._grid.clearCache();\n      this.__closeEditor();\n    }\n  }\n\n  /**\n   * Utility method for setting nested values in JSON objects but initializing empty keys unless `Polymer.Base.set`\n   * @private\n   */\n  __set(path, val, obj) {\n    if (obj && path) {\n      path\n        .split('.')\n        .slice(0, -1)\n        .reduce((o, p) => (o[p] = o[p] || {}), obj);\n      this.set(path, val, obj);\n    }\n  }\n\n  /**\n   * Fired when user wants to edit an existing item. If the default is prevented, then\n   * a new item is not assigned to the form, giving that responsibility to the app, though\n   * dialog is always opened.\n   *\n   * @event edit\n   * @param {Object} detail.item the item to edit\n   */\n\n  /**\n   * Fired when user wants to create a new item.\n   *\n   * @event new\n   */\n\n  /**\n   * Fired when user wants to delete item. If the default is prevented, then\n   * no action is performed, items array is not modified nor dialog closed\n   *\n   * @event delete\n   * @param {Object} detail.item the item to delete\n   */\n\n  /**\n   * Fired when user discards edition. If the default is prevented, then\n   * no action is performed, user is responsible to close dialog and reset\n   * item and grid.\n   *\n   * @event cancel\n   * @param {Object} detail.item the item to delete\n   */\n\n  /**\n   * Fired when user wants to save a new or an existing item. If the default is prevented, then\n   * no action is performed, items array is not modified nor dialog closed\n   *\n   * @event save\n   * @param {Object} detail.item the item to save\n   * @param {Object} detail.new whether the item is a new one\n   */\n}\n\ncustomElements.define(Crud.is, Crud);\n\nexport { Crud };\n"],
  "mappings": "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",
  "names": []
}
