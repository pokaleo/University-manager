{
  "version": 3,
  "sources": ["../@vaadin/avatar-group/src/vaadin-avatar-group-list-box.js", "../@vaadin/avatar-group/src/vaadin-avatar-group-overlay.js", "../@vaadin/avatar-group/src/vaadin-avatar-group.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2020 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ListBox } from '@vaadin/list-box/src/vaadin-list-box.js';\n\n/**\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\n *\n * @extends ListBox\n * @private\n */\nclass AvatarGroupListBox extends ListBox {\n  static get is() {\n    return 'vaadin-avatar-group-list-box';\n  }\n}\n\ncustomElements.define(AvatarGroupListBox.is, AvatarGroupListBox);\n", "/**\n * @license\n * Copyright (c) 2020 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-avatar-group-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n\n    :host([bottom-aligned]) {\n      justify-content: flex-end;\n    }\n  `,\n  { moduleId: 'vaadin-avatar-group-overlay-styles' }\n);\n\n/**\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @private\n */\nclass AvatarGroupOverlay extends OverlayElement {\n  static get is() {\n    return 'vaadin-avatar-group-overlay';\n  }\n}\n\ncustomElements.define(AvatarGroupOverlay.is, AvatarGroupOverlay);\n", "/**\n * @license\n * Copyright (c) 2020 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport '@vaadin/avatar/src/vaadin-avatar.js';\nimport '@vaadin/item/src/vaadin-item.js';\nimport './vaadin-avatar-group-list-box.js';\nimport './vaadin-avatar-group-overlay.js';\nimport { calculateSplices } from '@polymer/polymer/lib/utils/array-splice.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { announce } from '@vaadin/component-base/src/a11y-announcer.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst MINIMUM_DISPLAYED_AVATARS = 2;\n\n/**\n * `<vaadin-avatar-group>` is a Web Component providing avatar group displaying functionality.\n *\n * To create the avatar group, first add the component to the page:\n *\n * ```\n * <vaadin-avatar-group></vaadin-avatar-group>\n * ```\n *\n * And then use [`items`](#/elements/vaadin-avatar-group#property-items) property to initialize the structure:\n *\n * ```\n * document.querySelector('vaadin-avatar-group').items = [\n *   {name: 'John Doe'},\n *   {abbr: 'AB'}\n * ];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name   | Description\n * ----------- | ---------------\n * `container` | The container element\n * `avatar`    | Individual avatars\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-avatar-group>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-avatar-group-list-box>` - has the same API as [`<vaadin-list-box>`](#/elements/vaadin-list-box).\n * - `<vaadin-avatar-group-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ResizeMixin\n */\nclass AvatarGroup extends ResizeMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          width: 100%; /* prevent collapsing inside non-stretching column flex */\n          --vaadin-avatar-group-overlap: 8px;\n          --vaadin-avatar-group-overlap-border: 2px;\n          --vaadin-avatar-size: 64px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='container'] {\n          display: flex;\n          position: relative;\n          width: 100%;\n          flex-wrap: nowrap;\n        }\n\n        [part='avatar']:not(:first-child) {\n          -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\n          -webkit-mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n          mask-size: calc(\n            300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\n          );\n        }\n\n        [part='avatar']:not([dir='rtl']):not(:first-child) {\n          margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\n          -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n          mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\n        }\n\n        [part='avatar'][dir='rtl']:not(:first-child) {\n          margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\n          -webkit-mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n          mask-position: calc(\n            50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\n          );\n        }\n      </style>\n      <div id=\"container\" part=\"container\">\n        <template id=\"items\" is=\"dom-repeat\" items=\"[[__computeItems(items.*, __itemsInView, maxItemsVisible)]]\">\n          <vaadin-avatar\n            name=\"[[item.name]]\"\n            abbr=\"[[item.abbr]]\"\n            img=\"[[item.img]]\"\n            part=\"avatar\"\n            theme$=\"[[theme]]\"\n            i18n=\"[[i18n]]\"\n            color-index=\"[[item.colorIndex]]\"\n          ></vaadin-avatar>\n        </template>\n        <vaadin-avatar\n          id=\"overflow\"\n          part=\"avatar\"\n          hidden$=\"[[__computeMoreHidden(items.length, __itemsInView, __maxReached)]]\"\n          abbr=\"[[__computeMore(items.length, __itemsInView, maxItemsVisible)]]\"\n          theme$=\"[[theme]]\"\n          on-click=\"_onOverflowClick\"\n          on-keydown=\"_onOverflowKeyDown\"\n          aria-haspopup=\"listbox\"\n        ></vaadin-avatar>\n      </div>\n      <vaadin-avatar-group-overlay id=\"overlay\" opened=\"{{_opened}}\" on-vaadin-overlay-close=\"_onVaadinOverlayClose\">\n        <template>\n          <vaadin-avatar-group-list-box on-keydown=\"_onListKeyDown\">\n            <template is=\"dom-repeat\" items=\"[[__computeExtraItems(items.*, __itemsInView, maxItemsVisible)]]\">\n              <vaadin-item theme=\"avatar-group-item\" role=\"option\">\n                <vaadin-avatar\n                  name=\"[[item.name]]\"\n                  abbr=\"[[item.abbr]]\"\n                  img=\"[[item.img]]\"\n                  i18n=\"[[i18n]]\"\n                  part=\"avatar\"\n                  theme$=\"[[theme]]\"\n                  color-index=\"[[item.colorIndex]]\"\n                  tabindex=\"-1\"\n                  aria-hidden=\"true\"\n                ></vaadin-avatar>\n                [[item.name]]\n              </vaadin-item>\n            </template>\n          </vaadin-avatar-group-list-box>\n        </template>\n      </vaadin-avatar-group-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-avatar-group';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array containing the items which will be stamped as avatars.\n       *\n       * The items objects allow to configure [`name`](#/elements/vaadin-avatar#property-name),\n       * [`abbr`](#/elements/vaadin-avatar#property-abbr), [`img`](#/elements/vaadin-avatar#property-img)\n       * and [`colorIndex`](#/elements/vaadin-avatar#property-colorIndex) properties on the\n       * stamped avatars.\n       *\n       * #### Example\n       *\n       * ```js\n       * group.items = [\n       *   {\n       *     name: 'User name',\n       *     img: 'url-to-image.png'\n       *   },\n       *   {\n       *     abbr: 'JD',\n       *     colorIndex: 1\n       *   },\n       * ];\n       * ```\n       *\n       * @type {!Array<!AvatarGroupItem> | undefined}\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The maximum number of avatars to display. By default, all the avatars are displayed.\n       * When _maxItemsVisible_ is set, the overflowing avatars are grouped into one avatar with\n       * a dropdown. Setting 0 or 1 has no effect so there are always at least two avatars visible.\n       */\n      maxItemsVisible: {\n        type: Number\n      },\n\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * _i18n_ object or just the property you want to modify.\n       *\n       * The object has the following JSON structure and default values:\n       * ```\n       * {\n       *   // Translation of the anonymous user avatar title.\n       *   anonymous: 'anonymous',\n       *   // Translation of the avatar group accessible label.\n       *   // {count} is replaced with the actual count of users.\n       *   activeUsers: {\n       *     one: 'Currently one active user',\n       *     many: 'Currently {count} active users'\n       *   },\n       *   // Screen reader announcement when user joins group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   joined: '{user} joined',\n       *   // Screen reader announcement when user leaves group.\n       *   // {user} is replaced with the name or abbreviation.\n       *   // When neither is set, \"anonymous\" is used instead.\n       *   left: '{user} left'\n       * }\n       * ```\n       * @type {!AvatarGroupI18n}\n       * @default {English/US}\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            anonymous: 'anonymous',\n            activeUsers: {\n              one: 'Currently one active user',\n              many: 'Currently {count} active users'\n            },\n            joined: '{user} joined',\n            left: '{user} left'\n          };\n        }\n      },\n\n      /** @private */\n      __maxReached: {\n        type: Boolean,\n        computed: '__computeMaxReached(items.length, maxItemsVisible)'\n      },\n\n      /** @private */\n      __itemsInView: {\n        type: Number,\n        value: null\n      },\n\n      /** @private */\n      _opened: {\n        type: Boolean,\n        observer: '__openedChanged',\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '__computeMoreTitle(items.length, __itemsInView, maxItemsVisible)',\n      '__itemsChanged(items.splices, items.*)',\n      '__i18nItemsChanged(i18n.*, items.length)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__boundSetPosition = this.__setPosition.bind(this);\n\n    this._overlayElement = this.shadowRoot.querySelector('vaadin-avatar-group-overlay');\n\n    afterNextRender(this, () => {\n      this.__setItemsInView();\n    });\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__setPosition();\n    }\n  }\n\n  /**\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  get _avatars() {\n    return this.shadowRoot.querySelectorAll('vaadin-avatar');\n  }\n\n  /** @private */\n  __getMessage(user, action) {\n    return action.replace('{user}', user.name || user.abbr || this.i18n.anonymous);\n  }\n\n  /** @private */\n  _onOverflowClick(e) {\n    e.stopPropagation();\n    if (this._opened) {\n      this.$.overlay.close();\n    } else if (!e.defaultPrevented) {\n      this._opened = true;\n    }\n  }\n\n  /** @private */\n  _onOverflowKeyDown(e) {\n    if (!this._opened) {\n      if (/^(Enter|SpaceBar|\\s)$/.test(e.key)) {\n        e.preventDefault();\n        this._opened = true;\n      }\n    }\n  }\n\n  /** @private */\n  _onListKeyDown(event) {\n    if (event.key === 'Escape' || event.key === 'Esc' || /^(Tab)$/.test(event.key)) {\n      this._opened = false;\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _onResize() {\n    this.__setItemsInView();\n    this.__setPosition();\n  }\n\n  /** @private */\n  _onVaadinOverlayClose(e) {\n    if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().indexOf(this) !== -1) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  __computeItems(arr, itemsInView, maxItemsVisible) {\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n    return limit ? items.slice(0, limit) : items;\n  }\n\n  /** @private */\n  __computeExtraItems(arr, itemsInView, maxItemsVisible) {\n    const items = arr.base || [];\n    const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\n    return limit ? items.slice(limit) : items;\n  }\n\n  /** @private */\n  __computeMaxReached(items, maxItemsVisible) {\n    return maxItemsVisible != null && items > this.__getMax(maxItemsVisible);\n  }\n\n  /** @private */\n  __computeMore(items, itemsInView, maxItemsVisible) {\n    return `+${items - this.__getLimit(items, itemsInView, maxItemsVisible)}`;\n  }\n\n  /** @private */\n  __computeMoreHidden(items, itemsInView, maxReached) {\n    return !maxReached && !(itemsInView && itemsInView < items);\n  }\n\n  /** @private */\n  __computeMoreTitle(items, itemsInView, maxItemsVisible) {\n    const limit = this.__getLimit(items, itemsInView, maxItemsVisible);\n    if (limit == null) {\n      return;\n    }\n    const result = [];\n    for (let i = limit; i < items; i++) {\n      const item = this.items[i];\n      if (item) {\n        result.push(item.name || item.abbr || 'anonymous');\n      }\n    }\n    // override generated title attribute\n    this.$.overflow.setAttribute('title', result.join('\\n'));\n  }\n\n  /** @private */\n  __getLimit(items, itemsInView, maxItemsVisible) {\n    let limit = null;\n    // handle max set to 0 or 1\n    const adjustedMax = this.__getMax(maxItemsVisible);\n    if (maxItemsVisible != null && adjustedMax < items) {\n      limit = adjustedMax - 1;\n    } else if (itemsInView && itemsInView < items) {\n      limit = itemsInView;\n    }\n\n    return Math.min(limit, this.__calculateAvatarsFitWidth());\n  }\n\n  /** @private */\n  __getMax(maxItemsVisible) {\n    return Math.max(maxItemsVisible, MINIMUM_DISPLAYED_AVATARS);\n  }\n\n  /** @private */\n  __itemsChanged(splices, itemsChange) {\n    const items = itemsChange.base;\n    this.$.items.render();\n    this.__setItemsInView();\n\n    // mutation using group.splice('items')\n    if (splices && Array.isArray(splices.indexSplices)) {\n      splices.indexSplices.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    } else if (Array.isArray(items) && Array.isArray(this.__oldItems)) {\n      // mutation using group.set('items')\n      const diff = calculateSplices(items, this.__oldItems);\n      diff.forEach((mutation) => {\n        this.__announceItemsChange(items, mutation);\n      });\n    }\n\n    this.__oldItems = items;\n  }\n\n  /** @private */\n  __announceItemsChange(items, mutation) {\n    const { addedCount, index, removed } = mutation;\n    let addedMsg = [];\n    let removedMsg = [];\n    if (addedCount) {\n      addedMsg = items\n        .slice(index, index + addedCount)\n        .map((user) => this.__getMessage(user, this.i18n.joined || '{user} joined'));\n    }\n\n    if (removed) {\n      removedMsg = removed.map((user) => this.__getMessage(user, this.i18n.left || '{user} left'));\n    }\n\n    const messages = removedMsg.concat(addedMsg);\n    if (messages.length > 0) {\n      announce(messages.join(', '));\n    }\n  }\n\n  /** @private */\n  __i18nItemsChanged(i18n, items) {\n    const { base } = i18n;\n    if (base && base.activeUsers) {\n      const field = items === 1 ? 'one' : 'many';\n      if (base.activeUsers[field]) {\n        this.setAttribute('aria-label', base.activeUsers[field].replace('{count}', items || 0));\n      }\n    }\n  }\n\n  /** @private */\n  __openedChanged(opened, wasOpened) {\n    if (opened) {\n      if (!this._menuElement) {\n        this._menuElement = this._overlayElement.content.querySelector('vaadin-avatar-group-list-box');\n        this._menuElement.setAttribute('role', 'listbox');\n      }\n\n      this._openedWithFocusRing = this.$.overflow.hasAttribute('focus-ring');\n\n      const avatars = this._menuElement.querySelectorAll('vaadin-avatar');\n      avatars.forEach((avatar) => avatar.removeAttribute('title'));\n\n      this._menuElement.focus();\n      this.__setPosition();\n      window.addEventListener('scroll', this.__boundSetPosition, true);\n    } else if (wasOpened) {\n      this.$.overflow.focus();\n      if (this._openedWithFocusRing) {\n        this.$.overflow.setAttribute('focus-ring', '');\n      }\n      window.removeEventListener('scroll', this.__boundSetPosition, true);\n    }\n    this.$.overflow.setAttribute('aria-expanded', opened === true);\n  }\n\n  /** @private */\n  __setItemsInView() {\n    const avatars = this._avatars;\n    const items = this.items;\n\n    // always show at least two avatars\n    if (!items || !avatars || avatars.length < 3) {\n      return;\n    }\n\n    let result = this.__calculateAvatarsFitWidth();\n\n    // only show overlay if two or more avatars don't fit\n    if (result === items.length - 1) {\n      result = items.length;\n    }\n\n    // close overlay if all avatars become visible\n    if (result >= items.length && this._opened) {\n      this.$.overlay.close();\n      // FIXME: hack to avoid jump before closing\n      this.$.overlay._flushAnimation('closing');\n    }\n\n    // reserve space for overflow avatar\n    this.__itemsInView = result;\n  }\n\n  /** @private **/\n  __calculateAvatarsFitWidth() {\n    if (!this.shadowRoot || this._avatars.length < MINIMUM_DISPLAYED_AVATARS) {\n      return MINIMUM_DISPLAYED_AVATARS;\n    }\n\n    const avatars = this._avatars;\n\n    // assume all the avatars have the same width\n    const avatarWidth = avatars[0].clientWidth;\n\n    // take negative margin into account\n    const { marginLeft, marginRight } = getComputedStyle(avatars[1]);\n\n    const offset =\n      this.getAttribute('dir') == 'rtl'\n        ? parseInt(marginRight, 0) - parseInt(marginLeft, 0)\n        : parseInt(marginLeft, 0) - parseInt(marginRight, 0);\n\n    return Math.floor((this.$.container.offsetWidth - avatarWidth) / (avatarWidth + offset));\n  }\n\n  /** @private */\n  __setPosition() {\n    if (!this._opened) {\n      return;\n    }\n    const btnRect = this.$.overflow.getBoundingClientRect();\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const bottomAlign = btnRect.top > (viewportHeight - btnRect.height) / 2;\n\n    const isRtl = this.getAttribute('dir') === 'rtl';\n\n    if (isRtl) {\n      this._overlayElement.style.right = document.documentElement.clientWidth - btnRect.right + 'px';\n    } else {\n      this._overlayElement.style.left = btnRect.left + 'px';\n    }\n\n    if (bottomAlign) {\n      this._overlayElement.setAttribute('bottom-aligned', '');\n      this._overlayElement.style.removeProperty('top');\n      this._overlayElement.style.bottom = viewportHeight - btnRect.top + 'px';\n    } else {\n      this._overlayElement.removeAttribute('bottom-aligned');\n      this._overlayElement.style.removeProperty('bottom');\n      this._overlayElement.style.top = btnRect.bottom + 'px';\n    }\n  }\n}\n\ncustomElements.define(AvatarGroup.is, AvatarGroup);\n\nexport { AvatarGroup };\n"],
  "mappings": "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",
  "names": []
}
