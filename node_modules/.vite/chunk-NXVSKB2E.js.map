{
  "version": 3,
  "sources": ["../@vaadin/tabs/src/vaadin-tab.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ItemMixin } from '@vaadin/item/src/vaadin-item-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-tab>` is a Web Component providing an accessible and customizable tab.\n *\n * ```\n *   <vaadin-tab>\n *     Tab 1\n *   </vaadin-tab>\n * ```\n *\n * The following state attributes are available for styling:\n *\n * Attribute  | Description | Part name\n * -----------|-------------|------------\n * `disabled` | Set to a disabled tab | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `selected` | Set when the tab is selected | :host\n * `active` | Set when mousedown or enter/spacebar pressed | :host\n * `orientation` | Set to `horizontal` or `vertical` depending on the direction of items  | :host\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ItemMixin\n */\nclass Tab extends ElementMixin(ThemableMixin(ItemMixin(PolymerElement))) {\n  static get template() {\n    return html`<slot></slot>`;\n  }\n\n  static get is() {\n    return 'vaadin-tab';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'tab');\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`\n   * to handle clicking anchors inside the tabs.\n   * @param {!KeyboardEvent} event\n   * @protected\n   * @override\n   */\n  _onKeyUp(event) {\n    const willClick = this.hasAttribute('active');\n\n    super._onKeyUp(event);\n\n    if (willClick) {\n      const anchor = this.querySelector('a');\n      if (anchor) {\n        anchor.click();\n      }\n    }\n  }\n}\n\ncustomElements.define(Tab.is, Tab);\n\nexport { Tab };\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,AAqCA,wBAAkB,aAAa,cAAc,UAAU,cAAc,CAAC,CAAC,EAAE;AAAA,aAC5D,WAAW;AACpB,WAAO;AAAA,EACT;AAAA,aAEW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AACZ,SAAK,aAAa,QAAQ,KAAK;AAAA,EACjC;AAAA,EASA,SAAS,OAAO;AACd,UAAM,YAAY,KAAK,aAAa,QAAQ;AAE5C,UAAM,SAAS,KAAK;AAEpB,QAAI,WAAW;AACb,YAAM,SAAS,KAAK,cAAc,GAAG;AACrC,UAAI,QAAQ;AACV,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAAA,EACF;AACF;AAEA,eAAe,OAAO,IAAI,IAAI,GAAG;",
  "names": []
}
