{
  "version": 3,
  "sources": ["../@vaadin/dialog/theme/lumo/vaadin-dialog-styles.js", "../@vaadin/dialog/src/vaadin-dialog-utils.js", "../@vaadin/dialog/src/vaadin-dialog-draggable-mixin.js", "../@vaadin/dialog/src/vaadin-dialog-resizable-mixin.js", "../@vaadin/dialog/src/vaadin-dialog.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst dialogOverlay = css`\n  /* Optical centering */\n  :host::before,\n  :host::after {\n    content: '';\n    flex-basis: 0;\n    flex-grow: 1;\n  }\n\n  :host::after {\n    flex-grow: 1.1;\n  }\n\n  [part='overlay'] {\n    border-radius: var(--lumo-border-radius-l);\n    box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-xl);\n    background-image: none;\n    outline: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-l);\n  }\n\n  /* No padding */\n  :host([theme~='no-padding']) [part='content'] {\n    padding: 0;\n  }\n\n  /* Animations */\n\n  :host([opening]),\n  :host([closing]) {\n    animation: 0.25s lumo-overlay-dummy-animation;\n  }\n\n  :host([opening]) [part='overlay'] {\n    animation: 0.12s 0.05s vaadin-dialog-enter cubic-bezier(0.215, 0.61, 0.355, 1) both;\n  }\n\n  @keyframes vaadin-dialog-enter {\n    0% {\n      opacity: 0;\n      transform: scale(0.95);\n    }\n  }\n\n  :host([closing]) [part='overlay'] {\n    animation: 0.1s 0.03s vaadin-dialog-exit cubic-bezier(0.55, 0.055, 0.675, 0.19) both;\n  }\n\n  :host([closing]) [part='backdrop'] {\n    animation-delay: 0.05s;\n  }\n\n  @keyframes vaadin-dialog-exit {\n    100% {\n      opacity: 0;\n      transform: scale(1.02);\n    }\n  }\n`;\n\nregisterStyles('vaadin-dialog-overlay', [overlay, dialogOverlay], { moduleId: 'lumo-dialog' });\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Checks if the argument is a touch event and if so, returns a first touch.\n * Otherwise, if the mouse event was passed, returns it as is.\n * @param {!MouseEvent | !TouchEvent} e\n * @return {!MouseEvent | !Touch}\n * @protected\n */\nexport function getMouseOrFirstTouchEvent(e) {\n  return e.touches ? e.touches[0] : e;\n}\n\n/**\n * Checks whether a mouse or touch event is in window.\n * @param {!MouseEvent | !TouchEvent} e\n * @return {boolean}\n * @protected\n */\nexport function eventInWindow(e) {\n  return e.clientX >= 0 && e.clientX <= window.innerWidth && e.clientY >= 0 && e.clientY <= window.innerHeight;\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\n\n/**\n * @polymerMixin\n */\nexport const DialogDraggableMixin = (superClass) =>\n  class VaadinDialogDraggableMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Set to true to enable repositioning the dialog by clicking and dragging.\n         *\n         * By default, only the overlay area can be used to drag the element. But,\n         * a child element can be marked as a draggable area by adding a\n         * \"`draggable`\" class to it, this will by default make all of its children draggable also.\n         * If you want a child element to be draggable\n         * but still have its children non-draggable (by default), mark it with\n         * \"`draggable-leaf-only`\" class name.\n         *\n         * @type {boolean}\n         */\n        draggable: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /** @private */\n        _touchDevice: {\n          type: Boolean,\n          value: isTouch\n        },\n\n        /* TODO: Expose as a public property (check naming) */\n        __dragHandleClassName: {\n          type: String\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._startDrag = this._startDrag.bind(this);\n      this._drag = this._drag.bind(this);\n      this._stopDrag = this._stopDrag.bind(this);\n      this.$.overlay.$.overlay.addEventListener('mousedown', this._startDrag);\n      this.$.overlay.$.overlay.addEventListener('touchstart', this._startDrag);\n    }\n\n    /** @private */\n    _startDrag(e) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (this.draggable && (e.button === 0 || e.touches)) {\n        const resizerContainer = this.$.overlay.$.resizerContainer;\n        const isResizerContainer = e.target === resizerContainer;\n        const isResizerContainerScrollbar =\n          e.offsetX > resizerContainer.clientWidth || e.offsetY > resizerContainer.clientHeight;\n        const isContentPart = e.target === this.$.overlay.$.content;\n\n        const isDraggable = e.composedPath().some((node, index) => {\n          if (!node.classList) {\n            return false;\n          }\n\n          const isDraggableNode = node.classList.contains(this.__dragHandleClassName || 'draggable');\n          const isDraggableLeafOnly = node.classList.contains('draggable-leaf-only');\n          const isLeafNode = index === 0;\n          return (isDraggableLeafOnly && isLeafNode) || (isDraggableNode && (!isDraggableLeafOnly || isLeafNode));\n        });\n\n        if ((isResizerContainer && !isResizerContainerScrollbar) || isContentPart || isDraggable) {\n          !isDraggable && e.preventDefault();\n          this._originalBounds = this.$.overlay.getBounds();\n          const event = getMouseOrFirstTouchEvent(e);\n          this._originalMouseCoords = { top: event.pageY, left: event.pageX };\n          window.addEventListener('mouseup', this._stopDrag);\n          window.addEventListener('touchend', this._stopDrag);\n          window.addEventListener('mousemove', this._drag);\n          window.addEventListener('touchmove', this._drag);\n          if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n            this.$.overlay.setBounds(this._originalBounds);\n          }\n        }\n      }\n    }\n\n    /** @private */\n    _drag(e) {\n      const event = getMouseOrFirstTouchEvent(e);\n      if (eventInWindow(event)) {\n        const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n        const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n        this.$.overlay.setBounds({ top, left });\n      }\n    }\n\n    /** @private */\n    _stopDrag() {\n      window.removeEventListener('mouseup', this._stopDrag);\n      window.removeEventListener('touchend', this._stopDrag);\n      window.removeEventListener('mousemove', this._drag);\n      window.removeEventListener('touchmove', this._drag);\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\n\nregisterStyles(\n  'vaadin-dialog-overlay',\n  css`\n    [part='overlay'] {\n      position: relative;\n      overflow: visible;\n      max-height: 100%;\n      display: flex;\n    }\n\n    [part='content'] {\n      box-sizing: border-box;\n      height: 100%;\n    }\n\n    .resizer-container {\n      overflow: auto;\n      flex-grow: 1;\n    }\n\n    [part='overlay'][style] .resizer-container {\n      min-height: 100%;\n      width: 100%;\n    }\n\n    :host(:not([resizable])) .resizer {\n      display: none;\n    }\n\n    .resizer {\n      position: absolute;\n      height: 16px;\n      width: 16px;\n    }\n\n    .resizer.edge {\n      height: 8px;\n      width: 8px;\n      top: -4px;\n      right: -4px;\n      bottom: -4px;\n      left: -4px;\n    }\n\n    .resizer.edge.n {\n      width: auto;\n      bottom: auto;\n      cursor: ns-resize;\n    }\n\n    .resizer.ne {\n      top: -4px;\n      right: -4px;\n      cursor: nesw-resize;\n    }\n\n    .resizer.edge.e {\n      height: auto;\n      left: auto;\n      cursor: ew-resize;\n    }\n\n    .resizer.se {\n      bottom: -4px;\n      right: -4px;\n      cursor: nwse-resize;\n    }\n\n    .resizer.edge.s {\n      width: auto;\n      top: auto;\n      cursor: ns-resize;\n    }\n\n    .resizer.sw {\n      bottom: -4px;\n      left: -4px;\n      cursor: nesw-resize;\n    }\n\n    .resizer.edge.w {\n      height: auto;\n      right: auto;\n      cursor: ew-resize;\n    }\n\n    .resizer.nw {\n      top: -4px;\n      left: -4px;\n      cursor: nwse-resize;\n    }\n  `,\n  { moduleId: 'vaadin-dialog-resizable-overlay-styles' }\n);\n\n/**\n * @polymerMixin\n */\nexport const DialogResizableMixin = (superClass) =>\n  class VaadinDialogResizableMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Set to true to enable resizing the dialog by dragging the corners and edges.\n         * @type {boolean}\n         */\n        resizable: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._resizeListeners = { start: {}, resize: {}, stop: {} };\n      this._addResizeListeners();\n    }\n\n    /** @private */\n    _addResizeListeners() {\n      // Note: edge controls added before corners\n      ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'].forEach((direction) => {\n        const resizer = document.createElement('div');\n        this._resizeListeners.start[direction] = (e) => this._startResize(e, direction);\n        this._resizeListeners.resize[direction] = (e) => this._resize(e, direction);\n        this._resizeListeners.stop[direction] = () => this._stopResize(direction);\n        if (direction.length === 1) {\n          resizer.classList.add('edge');\n        }\n        resizer.classList.add('resizer');\n        resizer.classList.add(direction);\n        resizer.addEventListener('mousedown', this._resizeListeners.start[direction]);\n        resizer.addEventListener('touchstart', this._resizeListeners.start[direction]);\n        this.$.overlay.$.resizerContainer.appendChild(resizer);\n      });\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _startResize(e, direction) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (e.button === 0 || e.touches) {\n        e.preventDefault();\n\n        this._originalBounds = this.$.overlay.getBounds();\n        const event = getMouseOrFirstTouchEvent(e);\n        this._originalMouseCoords = { top: event.pageY, left: event.pageX };\n        window.addEventListener('mousemove', this._resizeListeners.resize[direction]);\n        window.addEventListener('touchmove', this._resizeListeners.resize[direction]);\n        window.addEventListener('mouseup', this._resizeListeners.stop[direction]);\n        window.addEventListener('touchend', this._resizeListeners.stop[direction]);\n        if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n          this.$.overlay.setBounds(this._originalBounds);\n        }\n      }\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} resizer\n     * @protected\n     */\n    _resize(e, resizer) {\n      const event = getMouseOrFirstTouchEvent(e);\n      if (eventInWindow(event)) {\n        const minimumSize = 40;\n        resizer.split('').forEach((direction) => {\n          switch (direction) {\n            case 'n': {\n              const height = this._originalBounds.height - (event.pageY - this._originalMouseCoords.top);\n              const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this.$.overlay.setBounds({ top, height });\n              }\n              break;\n            }\n            case 'e': {\n              const width = this._originalBounds.width + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this.$.overlay.setBounds({ width });\n              }\n              break;\n            }\n            case 's': {\n              const height = this._originalBounds.height + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this.$.overlay.setBounds({ height });\n              }\n              break;\n            }\n            case 'w': {\n              const width = this._originalBounds.width - (event.pageX - this._originalMouseCoords.left);\n              const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this.$.overlay.setBounds({ left, width });\n              }\n              break;\n            }\n            default:\n              break;\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _stopResize(direction) {\n      window.removeEventListener('mousemove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('touchmove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('mouseup', this._resizeListeners.stop[direction]);\n      window.removeEventListener('touchend', this._resizeListeners.stop[direction]);\n      this.dispatchEvent(new CustomEvent('resize', { detail: this._getResizeDimensions() }));\n    }\n\n    /**\n     * @return {!DialogResizeDimensions}\n     * @protected\n     */\n    _getResizeDimensions() {\n      const scrollPosition = this.$.overlay.$.resizerContainer.scrollTop;\n      const { width, height } = getComputedStyle(this.$.overlay.$.overlay);\n      const content = this.$.overlay.$.content;\n      content.setAttribute(\n        'style',\n        'position: absolute; top: 0; right: 0; bottom: 0; left: 0; box-sizing: content-box; height: auto;'\n      );\n      const { width: contentWidth, height: contentHeight } = getComputedStyle(content);\n      content.removeAttribute('style');\n      this.$.overlay.$.resizerContainer.scrollTop = scrollPosition;\n      return { width, height, contentWidth, contentHeight };\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { DialogDraggableMixin } from './vaadin-dialog-draggable-mixin.js';\nimport { DialogResizableMixin } from './vaadin-dialog-resizable-mixin.js';\n\nregisterStyles(\n  'vaadin-dialog-overlay',\n  css`\n    /*\n      NOTE(platosha): Make some min-width to prevent collapsing of the content\n      taking the parent width, e. g., <vaadin-grid> and such.\n    */\n    [part='content'] {\n      min-width: 12em; /* matches the default <vaadin-text-field> width */\n    }\n\n    :host([has-bounds-set]) [part='overlay'] {\n      max-width: none;\n    }\n  `,\n  { moduleId: 'vaadin-dialog-overlay-styles' }\n);\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-dialog>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @private\n */\nexport class DialogOverlay extends OverlayElement {\n  static get is() {\n    return 'vaadin-dialog-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      const contentPart = memoizedTemplate.content.querySelector('[part=\"content\"]');\n      const overlayPart = memoizedTemplate.content.querySelector('[part=\"overlay\"]');\n      const resizerContainer = document.createElement('div');\n      resizerContainer.id = 'resizerContainer';\n      resizerContainer.classList.add('resizer-container');\n      resizerContainer.appendChild(contentPart);\n      overlayPart.appendChild(resizerContainer);\n    }\n    return memoizedTemplate;\n  }\n\n  static get properties() {\n    return {\n      modeless: Boolean,\n\n      withBackdrop: Boolean\n    };\n  }\n\n  /**\n   * Updates the coordinates of the overlay.\n   * @param {!DialogOverlayBoundsParam} bounds\n   */\n  setBounds(bounds) {\n    const overlay = this.$.overlay;\n    const parsedBounds = { ...bounds };\n\n    if (overlay.style.position !== 'absolute') {\n      overlay.style.position = 'absolute';\n      this.setAttribute('has-bounds-set', '');\n      this.__forceSafariReflow();\n    }\n\n    for (const arg in parsedBounds) {\n      if (typeof parsedBounds[arg] === 'number') {\n        parsedBounds[arg] = `${parsedBounds[arg]}px`;\n      }\n    }\n\n    Object.assign(overlay.style, parsedBounds);\n  }\n\n  /**\n   * Retrieves the coordinates of the overlay.\n   * @return {!DialogOverlayBounds}\n   */\n  getBounds() {\n    const overlayBounds = this.$.overlay.getBoundingClientRect();\n    const containerBounds = this.getBoundingClientRect();\n    const top = overlayBounds.top - containerBounds.top;\n    const left = overlayBounds.left - containerBounds.left;\n    const width = overlayBounds.width;\n    const height = overlayBounds.height;\n    return { top, left, width, height };\n  }\n\n  /**\n   * Safari 13 renders overflowing elements incorrectly.\n   * This forces it to recalculate height.\n   * @private\n   */\n  __forceSafariReflow() {\n    const scrollPosition = this.$.resizerContainer.scrollTop;\n    const overlay = this.$.overlay;\n    overlay.style.display = 'block';\n\n    requestAnimationFrame(() => {\n      overlay.style.display = '';\n      this.$.resizerContainer.scrollTop = scrollPosition;\n    });\n  }\n}\n\ncustomElements.define(DialogOverlay.is, DialogOverlay);\n\n/**\n * `<vaadin-dialog>` is a Web Component for creating customized modal dialogs.\n *\n * ### Rendering\n *\n * The content of the dialog can be populated by using the renderer callback function.\n *\n * The renderer function provides `root`, `dialog` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `dialog`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-dialog id=\"dialog\"></vaadin-dialog>\n * ```\n * ```js\n * const dialog = document.querySelector('#dialog');\n * dialog.renderer = function(root, dialog) {\n *   root.textContent = \"Sample dialog\";\n * };\n * ```\n *\n * Renderer is called on the opening of the dialog.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Styling\n *\n * `<vaadin-dialog>` uses `<vaadin-dialog-overlay>` internal\n * themable component as the actual visible dialog overlay.\n *\n * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation.\n * for `<vaadin-dialog-overlay>` parts.\n *\n * Note: the `theme` attribute value set on `<vaadin-dialog>` is\n * propagated to the internal `<vaadin-dialog-overlay>` component.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} resize - Fired when the dialog resize is finished.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemePropertyMixin\n * @mixes ElementMixin\n * @mixes DialogDraggableMixin\n * @mixes DialogResizableMixin\n */\nclass Dialog extends ThemePropertyMixin(ElementMixin(DialogDraggableMixin(DialogResizableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none;\n        }\n      </style>\n\n      <vaadin-dialog-overlay\n        id=\"overlay\"\n        on-opened-changed=\"_onOverlayOpened\"\n        on-mousedown=\"_bringOverlayToFront\"\n        on-touchstart=\"_bringOverlayToFront\"\n        theme$=\"[[theme]]\"\n        modeless=\"[[modeless]]\"\n        with-backdrop=\"[[!modeless]]\"\n        resizable$=\"[[resizable]]\"\n        focus-trap\n      ></vaadin-dialog-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-dialog';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * Set to true to disable closing dialog on outside click\n       * @attr {boolean} no-close-on-outside-click\n       * @type {boolean}\n       */\n      noCloseOnOutsideClick: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to disable closing dialog on Escape press\n       * @attr {boolean} no-close-on-esc\n       * @type {boolean}\n       */\n      noCloseOnEsc: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set the `aria-label` attribute for assistive technologies like\n       * screen readers. An empty string value for this property (the\n       * default) means that the `aria-label` attribute is not present.\n       */\n      ariaLabel: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Custom function for rendering the content of the dialog.\n       * Receives two arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `dialog` The reference to the `<vaadin-dialog>` element.\n       * @type {DialogRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Set to true to remove backdrop and allow click events on background elements.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_openedChanged(opened)', '_ariaLabelChanged(ariaLabel)', '_rendererChanged(renderer)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.$.overlay.setAttribute('role', 'dialog');\n    this.$.overlay.addEventListener('vaadin-overlay-outside-click', this._handleOutsideClick.bind(this));\n    this.$.overlay.addEventListener('vaadin-overlay-escape-press', this._handleEscPress.bind(this));\n\n    processTemplates(this);\n  }\n\n  /**\n   * Requests an update for the content of the dialog.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    this.$.overlay.requestContentUpdate();\n  }\n\n  /** @private */\n  _rendererChanged(renderer) {\n    this.$.overlay.setProperties({ owner: this, renderer });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.opened = false;\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    this.$.overlay.opened = opened;\n  }\n\n  /** @private */\n  _ariaLabelChanged(ariaLabel) {\n    if (ariaLabel) {\n      this.$.overlay.setAttribute('aria-label', ariaLabel);\n    } else {\n      this.$.overlay.removeAttribute('aria-label');\n    }\n  }\n\n  /** @private */\n  _onOverlayOpened(e) {\n    if (e.detail.value === false) {\n      this.opened = false;\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnOutsideClick` isn't set to true\n   * @private\n   */\n  _handleOutsideClick(e) {\n    if (this.noCloseOnOutsideClick) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnEsc` isn't set to true\n   * @private\n   */\n  _handleEscPress(e) {\n    if (this.noCloseOnEsc) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _bringOverlayToFront() {\n    if (this.modeless) {\n      this.$.overlay.bringToFront();\n    }\n  }\n}\n\ncustomElements.define(Dialog.is, Dialog);\n\nexport { Dialog };\n"],
  "mappings": "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",
  "names": []
}
