import {
  NumberField
} from "./chunk-LSHBRVYN.js";

// node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  static get properties() {
    return {
      _enabledCharPattern: {
        value: "[-+\\d]"
      }
    };
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(newVal, oldVal) {
    if (!this.__hasOnlyDigits(newVal)) {
      console.warn(`Trying to set invalid step size "${newVal}", which is not a positive integer, to <vaadin-integer-field>. Resetting the default value 1.`);
      this.step = 1;
      return;
    }
    super._stepChanged(newVal, oldVal);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d*$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=chunk-SPAVZF4M.js.map
