import {
  NumberField
} from "./chunk-MKO6IUJG.js";
import "./chunk-6P7LAZ4E.js";
import "./chunk-XNITCYAA.js";
import "./chunk-3DPYGOOZ.js";
import "./chunk-OA3YIVWN.js";
import "./chunk-ON7ICNNX.js";
import "./chunk-YJVFTOSG.js";
import "./chunk-DN7NE4EQ.js";
import "./chunk-4JL67NGK.js";
import "./chunk-NENT67AA.js";
import "./chunk-YESAUM4I.js";
import "./chunk-2PREY5TQ.js";
import "./chunk-W2FE6W4J.js";
import "./chunk-JKBBW2QH.js";
import "./chunk-BUARF445.js";
import "./chunk-IASAGYPQ.js";
import "./chunk-UTZKFO5A.js";
import "./chunk-CHZ6BFNC.js";
import "./chunk-TNYX3KNS.js";
import "./chunk-5B3W7TLP.js";
import "./chunk-75WEHVQA.js";
import "./chunk-Q3ITW52D.js";
import "./chunk-SYJMCSOT.js";
import "./chunk-TSMFV5J4.js";
import "./chunk-WUR5UZ22.js";
import "./chunk-YZXPUGLM.js";
import "./chunk-PALO6AVQ.js";
import "./chunk-OKCEHAIA.js";
import "./chunk-KCWZ32HQ.js";
import "./chunk-ZFVP5VBM.js";
import "./chunk-QNRFZUBX.js";
import "./chunk-PYLEJJK2.js";
import "./chunk-EMDRMWGL.js";
import "./chunk-H3KD7FYF.js";
import "./chunk-NZ6RMXB7.js";
import "./chunk-RQI6IG5T.js";
import "./chunk-KTZKXPFA.js";

// node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  static get properties() {
    return {
      _enabledCharPattern: {
        value: "[-+\\d]"
      }
    };
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(newVal, oldVal) {
    if (!this.__hasOnlyDigits(newVal)) {
      console.warn(`Trying to set invalid step size "${newVal}", which is not a positive integer, to <vaadin-integer-field>. Resetting the default value 1.`);
      this.step = 1;
      return;
    }
    super._stepChanged(newVal, oldVal);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d*$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_integer-field_theme_lumo_vaadin-integer-field_js.js.map
