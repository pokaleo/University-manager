{
  "version": 3,
  "sources": ["../@vaadin/checkbox/src/vaadin-checkbox.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ActiveMixin } from '@vaadin/component-base/src/active-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\nimport { DelegateFocusMixin } from '@vaadin/field-base/src/delegate-focus-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { SlotTargetController } from '@vaadin/field-base/src/slot-target-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-checkbox>` is an input field representing a binary choice.\n *\n * ```html\n * <vaadin-checkbox label=\"I accept the terms and conditions\"></vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|----------------\n * `checkbox`  | The wrapper element that contains slotted <input type=\"checkbox\">.\n *\n * The following state attributes are available for styling:\n *\n * Attribute       | Description | Part name\n * ----------------|-------------|--------------\n * `active`        | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`      | Set when the checkbox is disabled. | `:host`\n * `focus-ring`    | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`       | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in the indeterminate state. | `:host`\n * `checked`       | Set when the checkbox is checked. | `:host`\n * `has-label`     | Set when the checkbox has a label. | `:host`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\n * @fires {CustomEvent} indeterminate-changed - Fired when the `indeterminate` property changes.\n *\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes ActiveMixin\n * @mixes DelegateFocusMixin\n * @mixes CheckedMixin\n * @mixes LabelMixin\n */\nclass Checkbox extends LabelMixin(\n  CheckedMixin(DelegateFocusMixin(ActiveMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))))))\n) {\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([disabled]) {\n          -webkit-tap-highlight-color: transparent;\n        }\n\n        .vaadin-checkbox-container {\n          display: grid;\n          grid-template-columns: auto 1fr;\n          align-items: baseline;\n        }\n\n        .vaadin-checkbox-wrapper {\n          position: relative;\n          height: 100%;\n        }\n\n        /* visually hidden */\n        ::slotted(input) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          width: 100%;\n          height: 100%;\n          opacity: 0;\n          cursor: inherit;\n          margin: 0;\n        }\n      </style>\n      <div class=\"vaadin-checkbox-container\">\n        <div class=\"vaadin-checkbox-wrapper\">\n          <div part=\"checkbox\"></div>\n          <slot name=\"input\"></slot>\n        </div>\n\n        <slot name=\"label\"></slot>\n\n        <div style=\"display: none !important\">\n          <slot id=\"noop\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is in the indeterminate state which means\n       * it is not possible to say whether it is checked or unchecked.\n       * The state is reset once the user switches the checkbox by hand.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       *\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The name of the checkbox.\n       *\n       * @type {string}\n       */\n      name: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  /** @override */\n  static get delegateProps() {\n    return [...super.delegateProps, 'indeterminate'];\n  }\n\n  /** @override */\n  static get delegateAttrs() {\n    return [...super.delegateAttrs, 'name'];\n  }\n\n  constructor() {\n    super();\n\n    this._setType('checkbox');\n\n    // Set the string \"on\" as the default value for the checkbox following the HTML specification:\n    // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    this.value = 'on';\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this._inputController) {\n      this._inputController = new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      });\n      this.addController(this._inputController);\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n      this.addController(\n        new SlotTargetController(\n          this.$.noop,\n          () => this._labelController.node,\n          () => this.__warnDeprecated()\n        )\n      );\n    }\n  }\n\n  /** @private */\n  __warnDeprecated() {\n    console.warn(\n      `WARNING: Since Vaadin 22, placing the label as a direct child of a <vaadin-checkbox> is deprecated.\nPlease use <label slot=\"label\"> wrapper or the label property instead.`\n    );\n  }\n\n  /**\n   * Extends the method from `ActiveMixin` in order to\n   * prevent setting the `active` attribute when interacting with a link inside the label.\n   *\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldSetActive(event) {\n    if (event.target.localName === 'a') {\n      return false;\n    }\n\n    return super._shouldSetActive(event);\n  }\n\n  /**\n   * Extends the method from `CheckedMixin` in order to\n   * reset the indeterminate state once the user switches the checkbox.\n   *\n   * @param {boolean} checked\n   * @protected\n   * @override\n   */\n  _toggleChecked(checked) {\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n\n    super._toggleChecked(checked);\n  }\n}\n\ncustomElements.define(Checkbox.is, Checkbox);\n\nexport { Checkbox };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AA0DA,6BAAuB,WACrB,aAAa,mBAAmB,YAAY,aAAa,cAAc,gBAAgB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5G,EAAE;AAAA,aACW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,aAEW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmDT;AAAA,aAEW,aAAa;AACtB,WAAO;AAAA,MAUL,eAAe;AAAA,QACb,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,oBAAoB;AAAA,MACtB;AAAA,MAOA,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,aAGW,gBAAgB;AACzB,WAAO,CAAC,GAAG,MAAM,eAAe,eAAe;AAAA,EACjD;AAAA,aAGW,gBAAgB;AACzB,WAAO,CAAC,GAAG,MAAM,eAAe,MAAM;AAAA,EACxC;AAAA,EAEA,cAAc;AACZ,UAAM;AAEN,SAAK,SAAS,UAAU;AAIxB,SAAK,QAAQ;AAAA,EACf;AAAA,EAGA,oBAAoB;AAClB,UAAM,kBAAkB;AAExB,QAAI,CAAC,KAAK,kBAAkB;AAC1B,WAAK,mBAAmB,IAAI,gBAAgB,MAAM,CAAC,UAAU;AAC3D,aAAK,iBAAiB,KAAK;AAC3B,aAAK,iBAAiB,KAAK;AAC3B,aAAK,cAAc;AACnB,aAAK,aAAa;AAAA,MACpB,CAAC;AACD,WAAK,cAAc,KAAK,gBAAgB;AACxC,WAAK,cAAc,IAAI,wBAAwB,KAAK,cAAc,KAAK,gBAAgB,CAAC;AACxF,WAAK,cACH,IAAI,qBACF,KAAK,EAAE,MACP,MAAM,KAAK,iBAAiB,MAC5B,MAAM,KAAK,iBAAiB,CAC9B,CACF;AAAA,IACF;AAAA,EACF;AAAA,EAGA,mBAAmB;AACjB,YAAQ,KACN;AAAA,uEAEF;AAAA,EACF;AAAA,EAWA,iBAAiB,OAAO;AACtB,QAAI,MAAM,OAAO,cAAc,KAAK;AAClC,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,iBAAiB,KAAK;AAAA,EACrC;AAAA,EAUA,eAAe,SAAS;AACtB,QAAI,KAAK,eAAe;AACtB,WAAK,gBAAgB;AAAA,IACvB;AAEA,UAAM,eAAe,OAAO;AAAA,EAC9B;AACF;AAEA,eAAe,OAAO,SAAS,IAAI,QAAQ;",
  "names": []
}
