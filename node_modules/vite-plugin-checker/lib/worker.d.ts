import { ConfigEnv } from 'vite';
import type { ServeChecker, BuildCheckBin, ServeAndBuildChecker, SharedConfig, BuildInCheckers } from './types';
interface WorkerScriptOptions {
    absFilename: string;
    buildBin: BuildCheckBin;
    serverChecker: ServeChecker;
}
export interface Script<T> {
    mainScript: () => (config: T & SharedConfig, env: ConfigEnv) => ServeAndBuildChecker;
    workerScript: () => void;
}
export declare function createScript<T extends Partial<BuildInCheckers>>({ absFilename, buildBin, serverChecker, }: WorkerScriptOptions): Script<T>;
export {};
//# sourceMappingURL=worker.d.ts.map