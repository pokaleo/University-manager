{
  "version": 3,
  "sources": ["../@vaadin/vaadin-license-checker/vaadin-license-checker.js"],
  "sourcesContent": ["/* This file is autogenerated from src/vaadin-license-checker.tpl.html */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeCheckLicenses() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nfunction _CustomElement() {\n  return Reflect.construct(HTMLElement, [], this.__proto__.constructor);\n}\nObject.setPrototypeOf(_CustomElement.prototype, HTMLElement.prototype);\nObject.setPrototypeOf(_CustomElement, HTMLElement);\nvar licenseBoxTemplate = document.createElement('template');\nlicenseBoxTemplate.innerHTML = '\\n  <style>\\n    :host {\\n      font: 16px/1.625 -apple-system, BlinkMacSystemFont, \"Roboto\", \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\\n      position: fixed;\\n      top: .5em;\\n      right: .5em;\\n      z-index: 10000;\\n      cursor: pointer;\\n      backface-visibility: hidden;\\n    }\\n\\n    #content {\\n      padding: 1em 1.5em;\\n      margin: 0;\\n      display: flex;\\n      flex-direction:row;\\n      align-items: center;\\n      text-align: left;\\n      font-size: inherit;\\n      line-height: inherit;\\n      font-weight: inherit;\\n      -webkit-font-smoothing: antialiased;\\n      -moz-osx-font-smoothin: grayscale;\\n      white-space: nowrap;\\n      letter-spacing: 0;\\n      border-radius: 5px;\\n    }\\n\\n    #content[type=\"needsvalidation\"] {\\n      background-color: #FFD5D8;\\n      color: #591217;\\n      box-shadow: 0 0 20px 1px rgba(242,51,51,0.10);\\n    }\\n\\n    #content[type=\"ok\"] {\\n      background-color: #B2F5C2;\\n      color: #1C562A;\\n      box-shadow: 0 0 20px 1px rgba(43,193,78,0.10);\\n    }\\n\\n    #content > svg {\\n      display: none;\\n      fill: currentColor;\\n      stroke: currentColor 1px;\\n      padding-left: 1.25em;\\n    }\\n\\n    #content[type=\"needsvalidation\"] > #link {\\n      display: inline;\\n    }\\n\\n    #content[type=\"ok\"] > #close {\\n      display: inline;\\n      vertical-align: -.125em;\\n    }\\n  </style>\\n\\n  <div id=\"content\">\\n    <div></div>\\n    <svg id=\"link\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n      <g id=\"external-link\"><path d=\"M8.6 3.5l3.5 3.5h-12.1v2h12.1l-3.5 3.5 1.4 1.4 6-5.9-6-5.9z\"></path></g>\\n    </svg>\\n    <svg id=\"close\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n      <g id=\"close-big\"><path d=\"M16 0l-1 0.010-7 6.99-7-6.99-1-0.010v1l7 7-7 7v1h1l7-7 7 7h1v-1l-7-7 7-7v-1z\"></path></g>\\n    </svg>\\n  </div>\\n';\nwindow.ShadyCSS && window.ShadyCSS.prepareTemplate(licenseBoxTemplate, 'vaadin-license-box');\n\nvar LicenseBoxElement = function (_CustomElement2) {\n  inherits(LicenseBoxElement, _CustomElement2);\n\n  function LicenseBoxElement() {\n    classCallCheck(this, LicenseBoxElement);\n    return possibleConstructorReturn(this, (LicenseBoxElement.__proto__ || Object.getPrototypeOf(LicenseBoxElement)).apply(this, arguments));\n  }\n\n  createClass(LicenseBoxElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      window.ShadyCSS && window.ShadyCSS.styleElement(this);\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(document.importNode(licenseBoxTemplate.content, true));\n        this._contentElement = this.shadowRoot.querySelector('#content');\n        this._render();\n      }\n    }\n  }, {\n    key: '_render',\n    value: function _render() {\n      if (!this._contentElement) {\n        return;\n      }\n\n      if (this._type) {\n        this._contentElement.setAttribute('type', this._type);\n      } else {\n        this._contentElement.removeAttribute('type');\n      }\n\n      this._contentElement.firstElementChild.innerHTML = this._content;\n    }\n  }, {\n    key: 'type',\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._type = type;\n      this._render();\n    }\n  }, {\n    key: 'content',\n    get: function () {\n      return this._content;\n    },\n    set: function (content) {\n      this._content = content;\n      this._render();\n    }\n  }]);\n  return LicenseBoxElement;\n}(_CustomElement);\n\ncustomElements.define('vaadin-license-box', LicenseBoxElement);\n\nvar LicenseCheckerLogger = function () {\n  function LicenseCheckerLogger() {\n    classCallCheck(this, LicenseCheckerLogger);\n\n    this.id = \"vaadin-license-checker\";\n  }\n\n  createClass(LicenseCheckerLogger, [{\n    key: 'isDebug',\n    value: function isDebug() {\n      return localStorage.getItem(\"vaadin.licenses.debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this.isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return LicenseCheckerLogger;\n}();\n\nvar LicenseCheckerStorage = function () {\n  function LicenseCheckerStorage() {\n    classCallCheck(this, LicenseCheckerStorage);\n\n    this.logger = new LicenseCheckerLogger();\n  }\n\n  createClass(LicenseCheckerStorage, [{\n    key: 'getLastCheckKey',\n    value: function getLastCheckKey(productInfo) {\n      return \"vaadin.licenses.{product}.lastCheck\".replace(\"{product}\", productInfo.name);\n    }\n  }, {\n    key: 'getLastCheck',\n    value: function getLastCheck(productInfo) {\n      return Number(localStorage.getItem(this.getLastCheckKey(productInfo)));\n    }\n  }, {\n    key: 'setLastCheck',\n    value: function setLastCheck(productInfo, timestamp) {\n      this.logger.debug(\"Setting last check time to \" + new Date(timestamp));\n      localStorage.setItem(this.getLastCheckKey(productInfo), timestamp);\n    }\n  }]);\n  return LicenseCheckerStorage;\n}();\n\nvar VaadinLicenseChecker = function () {\n  function VaadinLicenseChecker() {\n    classCallCheck(this, VaadinLicenseChecker);\n\n    this.okNotifier = new LicenseOkNotifier();\n    this.validationNeededNotifier = new LicenseValidationNeededNotifier();\n    this.storage = new LicenseCheckerStorage();\n    this.checkInterval = 1000 * 60 * 60 * 24;\n    this.firstCheckDelay = 1000 * 60 * 1;\n    this.logger = new LicenseCheckerLogger();\n    this.url = \"https://tools.vaadin.com/vaadin-license-server/licenses/pro\";\n  }\n\n  createClass(VaadinLicenseChecker, [{\n    key: 'getForcedResponseKey',\n    value: function getForcedResponseKey(productInfo) {\n      return 'vaadin.licenses.{product}.forcedResponse'.replace('{product}', productInfo.name);\n    }\n  }, {\n    key: 'getForcedResponse',\n    value: function getForcedResponse(productInfo) {\n      return localStorage.getItem(this.getForcedResponseKey(productInfo));\n    }\n  }, {\n    key: 'clearForcedResponse',\n    value: function clearForcedResponse(productInfo) {\n      return localStorage.removeItem(this.getForcedResponseKey(productInfo));\n    }\n  }, {\n    key: 'maybeCheck',\n    value: function maybeCheck(productInfo) {\n      this.logger.debug(\"maybeCheck(\" + JSON.stringify(productInfo) + \")\");\n      // Defer first check until interval has expired to avoid interfering with tests etc\n      var now = new Date().getTime();\n      var lastCheck = this.storage.getLastCheck(productInfo);\n      if (!lastCheck) {\n        this.logger.debug(\"Deferring first check until \" + new Date(now + this.firstCheckDelay));\n        this.storage.setLastCheck(productInfo, now - this.checkInterval + this.firstCheckDelay);\n        return;\n      } else {\n        var sinceLastCheck = Math.round((now - lastCheck) / 1000);\n        var nextCheck = Math.round(this.checkInterval / 1000 - sinceLastCheck);\n        if (nextCheck > 0) {\n          // Checked recently\n          var nextCheckDate = new Date(lastCheck + this.checkInterval);\n          this.logger.debug(\"Checked \" + sinceLastCheck + \"s ago. Next check in \" + nextCheck + \"s at \" + nextCheckDate + \".\");\n          return;\n        } else {\n          this.logger.debug(\"Last check was \" + sinceLastCheck + \"s ago.\");\n        }\n      }\n      this.check(productInfo);\n    }\n  }, {\n    key: 'check',\n    value: function check(productInfo) {\n      this.logger.debug(\"check(\" + JSON.stringify(productInfo) + \")\");\n\n      // Only show an ok notification if the \"validation needed\" notification was shown.\n      // For background checks, show no visual notification if all goes well\n      var showOkOnSuccess = this.validationNeededNotifier.isVisible(productInfo);\n\n      var checker = this;\n      var onerror = function () {\n        // Offline or blocked, just log to console and let people get work done\n        console.error(\"Unable to validate the license for \" + productInfo.name + \". Check your internet access.\");\n      };\n      var onresponse = function (responseText) {\n        var response = JSON.parse(responseText);\n        if (response.result == \"ok\") {\n          // Everything is fine, stop\n          checker.logger.debug(\"License check ok for \" + JSON.stringify(productInfo));\n          checker.storage.setLastCheck(productInfo, new Date().getTime());\n          if (showOkOnSuccess) {\n            checker.logger.debug(\"Showing validation-ok dialog\");\n            checker.okNotifier.show(productInfo);\n          }\n        } else {\n          checker.logger.debug(\"License check failed for \" + JSON.stringify(productInfo));\n          checker.logger.debug(\"Showing validation-needed dialog\");\n          checker.validationNeededNotifier.show(productInfo);\n        }\n        if (response.message) {\n          console.log(response.message);\n        }\n      };\n\n      // This is typically hidden already but when receiving a window message it is not\n      this.logger.debug(\"Ensuring validation-needed dialog is hidden\");\n      this.validationNeededNotifier.hide(productInfo);\n\n      if (this.logger.isDebug() && this.getForcedResponse(productInfo)) {\n        var respJson = this.getForcedResponse(productInfo);\n        this.clearForcedResponse(productInfo);\n        if (JSON.parse(respJson).type == \"error\") {\n          this.logger.debug(\"Forced error for check\");\n          onerror();\n        } else {\n          this.logger.debug(\"Forced response for check: \" + respJson);\n          onresponse(respJson);\n        }\n      } else {\n        this.send(this.url, productInfo, onresponse, onerror);\n      }\n    }\n  }, {\n    key: 'send',\n    value: function send(url, productInfo, onsuccess, onerror) {\n      this.logger.debug(\"Sending request to \" + url);\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"readystatechange\", function () {\n        if (req.readyState === XMLHttpRequest.DONE && req.status === 200) {\n          onsuccess(req.responseText);\n        }\n      });\n      req.addEventListener(\"error\", function () {\n        onerror();\n      });\n      req.open(\"GET\", url);\n      req.setRequestHeader(\"check-source\", \"webcomponent\");\n      req.setRequestHeader(\"product-name\", productInfo.name);\n      req.setRequestHeader(\"product-version\", productInfo.version);\n\n      req.send();\n    }\n  }], [{\n    key: 'version',\n    get: function () {\n      return '2.1.2';\n    }\n  }]);\n  return VaadinLicenseChecker;\n}();\n\nvar LicenseOkNotifier = function () {\n  function LicenseOkNotifier() {\n    classCallCheck(this, LicenseOkNotifier);\n  }\n\n  createClass(LicenseOkNotifier, [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return document.getElementById(LicenseOkNotifier.id);\n    }\n  }, {\n    key: 'show',\n    value: function show(productInfo) {\n      // Only show one ok box even if multiple licenses were checked\n      if (this.getInstance()) {\n        // Already shown\n        return;\n      }\n      var instance = document.createElement(\"vaadin-license-box\");\n      instance.id = LicenseOkNotifier.id;\n      instance.type = \"ok\";\n      instance.content = \"Your license has been validated\";\n      document.body.appendChild(instance);\n      instance.addEventListener(\"click\", function () {\n        instance.parentElement.removeChild(instance);\n      });\n    }\n  }], [{\n    key: 'id',\n    get: function () {\n      return 'vaadin-license-validation-ok';\n    }\n  }]);\n  return LicenseOkNotifier;\n}();\n\nvar LicenseValidationNeededNotifier = function () {\n  function LicenseValidationNeededNotifier() {\n    classCallCheck(this, LicenseValidationNeededNotifier);\n  }\n\n  createClass(LicenseValidationNeededNotifier, [{\n    key: 'id',\n    value: function id(productInfo) {\n      return \"vaadin-license-validation-notification-{product}\".replace(\"{product}\", productInfo.name);\n    }\n  }, {\n    key: 'getInstance',\n    value: function getInstance(productInfo) {\n      return document.getElementById(this.id(productInfo));\n    }\n  }, {\n    key: 'show',\n    value: function show(productInfo) {\n      if (this.getInstance(productInfo)) {\n        // Already shown\n        return;\n      }\n      var instance = document.createElement(\"vaadin-license-box\");\n      instance.id = this.id(productInfo);\n      instance.type = \"needsvalidation\";\n      instance.content = \"This application is using components which are part of a Vaadin subscription.<br>Click here to get a trial or validate your subscription\";\n      document.body.appendChild(instance);\n      instance.addEventListener(\"click\", function () {\n        window.open(\"https://vaadin.com/pro/validate-license\", \"_blank\");\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide(productInfo) {\n      var instance = this.getInstance(productInfo);\n      if (instance) {\n        instance.parentElement.removeChild(instance);\n      }\n    }\n  }, {\n    key: 'isVisible',\n    value: function isVisible(productInfo) {\n      return !!this.getInstance(productInfo);\n    }\n  }]);\n  return LicenseValidationNeededNotifier;\n}();\n\nvar proProducts = [];\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.LicenseChecker = window.Vaadin.VaadinLicenseChecker || new VaadinLicenseChecker();\nwindow.Vaadin.LicenseCheckerClass = window.Vaadin.LicenseCheckerClass || VaadinLicenseChecker;\nwindow.Vaadin.developmentModeCallback = window.Vaadin.developmentModeCallback || {};\nwindow.Vaadin.developmentModeCallback[\"vaadin-license-checker\"] = function (cls) {\n  var productInfo = { name: cls.is, version: cls.version };\n  proProducts.push(productInfo);\n  window.addEventListener(\"message\", function (e) {\n    if (e.data == \"validate-license\") {\n      window.Vaadin.LicenseChecker.check(productInfo);\n    }\n  }, false);\n\n  window.Vaadin.checkLicenses = function () {\n    // Force checking of all licenses to avoid e.g. popups during presentations when the grace period just has ended\n    proProducts.forEach(function (productInfo) {\n      window.Vaadin.LicenseChecker.check(productInfo);\n    });\n  };\n\n  window.Vaadin.LicenseChecker.maybeCheck(productInfo);\n};\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nif (typeof runIfDevelopmentMode === 'function') {\n  runIfDevelopmentMode(maybeCheckLicenses);\n}\n"],
  "mappings": ";;;;;AAQA,8BAA8B;AAka9B;AAEA,IAAI,OAAO,yBAAyB,YAAY;AAC9C,uBAAqB,kBAAkB;AACzC;",
  "names": []
}
