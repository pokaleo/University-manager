{
  "version": 3,
  "sources": ["../@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js", "../@vaadin/list-box/src/vaadin-list-box.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ListMixin } from './vaadin-list-mixin.js';\n\n/**\n * A mixin for `nav` elements, facilitating multiple selection of childNodes.\n *\n * @polymerMixin\n * @mixes ListMixin\n */\nexport const MultiSelectListMixin = (superClass) =>\n  class VaadinMultiSelectListMixin extends ListMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Specifies that multiple options can be selected at once.\n         */\n        multiple: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_multipleChanged'\n        },\n\n        /**\n         * Array of indexes of the items selected in the items array\n         * Note: Not updated when used in single selection mode.\n         * @type {number[] | null | undefined}\n         */\n        selectedValues: {\n          type: Array,\n          notify: true,\n          value: function () {\n            return [];\n          }\n        }\n      };\n    }\n\n    static get observers() {\n      return [`_enhanceMultipleItems(items, multiple, selected, selectedValues, selectedValues.*)`];\n    }\n\n    /** @protected */\n    ready() {\n      // Should be attached before click listener in list-mixin\n      this.addEventListener('click', (e) => this._onMultipleClick(e));\n\n      super.ready();\n    }\n\n    /** @private */\n    _enhanceMultipleItems(items, multiple, selected, selectedValues) {\n      if (!items || !multiple) {\n        return;\n      }\n\n      if (selectedValues) {\n        const selectedItems = selectedValues.map((selectedId) => items[selectedId]);\n        items.forEach((item) => (item.selected = selectedItems.indexOf(item) !== -1));\n      }\n\n      this._scrollToLastSelectedItem();\n    }\n\n    /** @private */\n    _scrollToLastSelectedItem() {\n      const lastSelectedItem = this.selectedValues.slice(-1)[0];\n      if (lastSelectedItem && !lastSelectedItem.disabled) {\n        this._scrollToItem(lastSelectedItem);\n      }\n    }\n\n    /**\n     * @param {!MouseEvent} event\n     * @protected\n     */\n    _onMultipleClick(event) {\n      const item = this._filterItems(event.composedPath())[0];\n      const idx = item && !item.disabled ? this.items.indexOf(item) : -1;\n      if (idx < 0 || !this.multiple) {\n        return;\n      }\n\n      event.preventDefault();\n      if (this.selectedValues.indexOf(idx) !== -1) {\n        this.selectedValues = this.selectedValues.filter((v) => v !== idx);\n      } else {\n        this.selectedValues = this.selectedValues.concat(idx);\n      }\n    }\n\n    /** @private */\n    _multipleChanged(value, oldValue) {\n      // Changing from multiple to single selection, clear selection.\n      if (!value && oldValue) {\n        this.selectedValues = [];\n        this.items.forEach((item) => (item.selected = false));\n      }\n\n      // Changing from single to multiple selection, add selected to selectedValues.\n      if (value && !oldValue && this.selected !== undefined) {\n        this.selectedValues = [...this.selectedValues, this.selected];\n        this.selected = undefined;\n      }\n    }\n\n    /**\n     * Fired when the selection is changed.\n     * Not fired in single selection mode.\n     *\n     * @event selected-values-changed\n     * @param {Object} detail\n     * @param {Object} detail.value the array of indexes of the items selected in the items array.\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { MultiSelectListMixin } from '@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-list-box>` is a Web Component for creating menus.\n *\n * ```\n *   <vaadin-list-box selected=\"2\">\n *     <vaadin-item>Item 1</vaadin-item>\n *     <vaadin-item>Item 2</vaadin-item>\n *     <vaadin-item>Item 3</vaadin-item>\n *     <vaadin-item>Item 4</vaadin-item>\n *   </vaadin-list-box>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|------------------------\n * `items`           | The items container\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\n * @fires {CustomEvent} selected-values-changed - Fired when the `selectedValues` property changes.\n *\n * @extends HTMLElement\n * @mixes MultiSelectListMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes ControllerMixin\n */\nclass ListBox extends ElementMixin(MultiSelectListMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='items'] {\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n      </style>\n      <div part=\"items\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-list-box';\n  }\n\n  static get properties() {\n    return {\n      // We don't need to define this property since super default is vertical,\n      // but we don't want it to be modified, or be shown in the API docs.\n      /** @private */\n      orientation: {\n        readOnly: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * @type {Element | null}\n     * @protected\n     */\n    this.focused;\n  }\n\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'list');\n\n    setTimeout(this._checkImport.bind(this), 2000);\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    return this.shadowRoot.querySelector('[part=\"items\"]');\n  }\n\n  /** @private */\n  _checkImport() {\n    var item = this.querySelector('vaadin-item');\n    if (item && !(item instanceof PolymerElement)) {\n      console.warn(`Make sure you have imported the vaadin-item element.`);\n    }\n  }\n}\n\ncustomElements.define(ListBox.is, ListBox);\n\nexport { ListBox };\n"],
  "mappings": "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",
  "names": []
}
